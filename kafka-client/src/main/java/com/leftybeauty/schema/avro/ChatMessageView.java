/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ChatMessageView extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6935647558783323161L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChatMessageView\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"appointmentId\",\"type\":\"string\"},{\"name\":\"person\",\"type\":{\"type\":\"record\",\"name\":\"PersonViewValue\",\"fields\":[{\"name\":\"leftyUserId\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"avatarUrl\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MessageActorEnum\",\"symbols\":[\"Client\",\"Provider\",\"System\"]}}]}},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ChatMessageView> ENCODER =
      new BinaryMessageEncoder<ChatMessageView>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ChatMessageView> DECODER =
      new BinaryMessageDecoder<ChatMessageView>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ChatMessageView> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ChatMessageView> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ChatMessageView> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ChatMessageView>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ChatMessageView to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ChatMessageView from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ChatMessageView instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ChatMessageView fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence appointmentId;
  private com.leftybeauty.schema.avro.PersonViewValue person;
  private java.lang.CharSequence message;
  private long timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ChatMessageView() {}

  /**
   * All-args constructor.
   * @param appointmentId The new value for appointmentId
   * @param person The new value for person
   * @param message The new value for message
   * @param timestamp The new value for timestamp
   */
  public ChatMessageView(java.lang.CharSequence appointmentId, com.leftybeauty.schema.avro.PersonViewValue person, java.lang.CharSequence message, java.lang.Long timestamp) {
    this.appointmentId = appointmentId;
    this.person = person;
    this.message = message;
    this.timestamp = timestamp;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appointmentId;
    case 1: return person;
    case 2: return message;
    case 3: return timestamp;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appointmentId = (java.lang.CharSequence)value$; break;
    case 1: person = (com.leftybeauty.schema.avro.PersonViewValue)value$; break;
    case 2: message = (java.lang.CharSequence)value$; break;
    case 3: timestamp = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'appointmentId' field.
   * @return The value of the 'appointmentId' field.
   */
  public java.lang.CharSequence getAppointmentId() {
    return appointmentId;
  }


  /**
   * Sets the value of the 'appointmentId' field.
   * @param value the value to set.
   */
  public void setAppointmentId(java.lang.CharSequence value) {
    this.appointmentId = value;
  }

  /**
   * Gets the value of the 'person' field.
   * @return The value of the 'person' field.
   */
  public com.leftybeauty.schema.avro.PersonViewValue getPerson() {
    return person;
  }


  /**
   * Sets the value of the 'person' field.
   * @param value the value to set.
   */
  public void setPerson(com.leftybeauty.schema.avro.PersonViewValue value) {
    this.person = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Creates a new ChatMessageView RecordBuilder.
   * @return A new ChatMessageView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.ChatMessageView.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.ChatMessageView.Builder();
  }

  /**
   * Creates a new ChatMessageView RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ChatMessageView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.ChatMessageView.Builder newBuilder(com.leftybeauty.schema.avro.ChatMessageView.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.ChatMessageView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.ChatMessageView.Builder(other);
    }
  }

  /**
   * Creates a new ChatMessageView RecordBuilder by copying an existing ChatMessageView instance.
   * @param other The existing instance to copy.
   * @return A new ChatMessageView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.ChatMessageView.Builder newBuilder(com.leftybeauty.schema.avro.ChatMessageView other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.ChatMessageView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.ChatMessageView.Builder(other);
    }
  }

  /**
   * RecordBuilder for ChatMessageView instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChatMessageView>
    implements org.apache.avro.data.RecordBuilder<ChatMessageView> {

    private java.lang.CharSequence appointmentId;
    private com.leftybeauty.schema.avro.PersonViewValue person;
    private com.leftybeauty.schema.avro.PersonViewValue.Builder personBuilder;
    private java.lang.CharSequence message;
    private long timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.ChatMessageView.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.person)) {
        this.person = data().deepCopy(fields()[1].schema(), other.person);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasPersonBuilder()) {
        this.personBuilder = com.leftybeauty.schema.avro.PersonViewValue.newBuilder(other.getPersonBuilder());
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing ChatMessageView instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.ChatMessageView other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.person)) {
        this.person = data().deepCopy(fields()[1].schema(), other.person);
        fieldSetFlags()[1] = true;
      }
      this.personBuilder = null;
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'appointmentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAppointmentId() {
      return appointmentId;
    }


    /**
      * Sets the value of the 'appointmentId' field.
      * @param value The value of 'appointmentId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder setAppointmentId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.appointmentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentId' field has been set.
      * @return True if the 'appointmentId' field has been set, false otherwise.
      */
    public boolean hasAppointmentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appointmentId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder clearAppointmentId() {
      appointmentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'person' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.PersonViewValue getPerson() {
      return person;
    }


    /**
      * Sets the value of the 'person' field.
      * @param value The value of 'person'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder setPerson(com.leftybeauty.schema.avro.PersonViewValue value) {
      validate(fields()[1], value);
      this.personBuilder = null;
      this.person = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'person' field has been set.
      * @return True if the 'person' field has been set, false otherwise.
      */
    public boolean hasPerson() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'person' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.PersonViewValue.Builder getPersonBuilder() {
      if (personBuilder == null) {
        if (hasPerson()) {
          setPersonBuilder(com.leftybeauty.schema.avro.PersonViewValue.newBuilder(person));
        } else {
          setPersonBuilder(com.leftybeauty.schema.avro.PersonViewValue.newBuilder());
        }
      }
      return personBuilder;
    }

    /**
     * Sets the Builder instance for the 'person' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.ChatMessageView.Builder setPersonBuilder(com.leftybeauty.schema.avro.PersonViewValue.Builder value) {
      clearPerson();
      personBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'person' field has an active Builder instance
     * @return True if the 'person' field has an active Builder instance
     */
    public boolean hasPersonBuilder() {
      return personBuilder != null;
    }

    /**
      * Clears the value of the 'person' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder clearPerson() {
      person = null;
      personBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.message = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder clearMessage() {
      message = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder setTimestamp(long value) {
      validate(fields()[3], value);
      this.timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ChatMessageView.Builder clearTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ChatMessageView build() {
      try {
        ChatMessageView record = new ChatMessageView();
        record.appointmentId = fieldSetFlags()[0] ? this.appointmentId : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (personBuilder != null) {
          try {
            record.person = this.personBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("person"));
            throw e;
          }
        } else {
          record.person = fieldSetFlags()[1] ? this.person : (com.leftybeauty.schema.avro.PersonViewValue) defaultValue(fields()[1]);
        }
        record.message = fieldSetFlags()[2] ? this.message : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.timestamp = fieldSetFlags()[3] ? this.timestamp : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ChatMessageView>
    WRITER$ = (org.apache.avro.io.DatumWriter<ChatMessageView>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ChatMessageView>
    READER$ = (org.apache.avro.io.DatumReader<ChatMessageView>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.appointmentId);

    this.person.customEncode(out);

    out.writeString(this.message);

    out.writeLong(this.timestamp);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);

      if (this.person == null) {
        this.person = new com.leftybeauty.schema.avro.PersonViewValue();
      }
      this.person.customDecode(in);

      this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);

      this.timestamp = in.readLong();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);
          break;

        case 1:
          if (this.person == null) {
            this.person = new com.leftybeauty.schema.avro.PersonViewValue();
          }
          this.person.customDecode(in);
          break;

        case 2:
          this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);
          break;

        case 3:
          this.timestamp = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










