/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AppointmentView extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2299434311423545936L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AppointmentView\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"appointmentId\",\"type\":\"string\"},{\"name\":\"leftyUserProvider\",\"type\":{\"type\":\"record\",\"name\":\"PersonValue\",\"fields\":[{\"name\":\"leftyUserId\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"avatarUrl\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"leftyUserClient\",\"type\":\"PersonValue\"},{\"name\":\"appointmentDateTime\",\"type\":\"long\"},{\"name\":\"clientAddress\",\"type\":{\"type\":\"record\",\"name\":\"AddressValue\",\"fields\":[{\"name\":\"addressId\",\"type\":\"string\"},{\"name\":\"street1\",\"type\":\"string\"},{\"name\":\"street2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":{\"type\":\"enum\",\"name\":\"UsStateEnum\",\"symbols\":[\"Alabama\",\"Alaska\",\"Arizona\",\"Arkansas\",\"California\"]}},{\"name\":\"zipCode\",\"type\":\"int\"}]}},{\"name\":\"leftyProviderServices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LeftyProviderServiceValue\",\"fields\":[{\"name\":\"leftyProviderServiceId\",\"type\":\"string\"},{\"name\":\"serviceCategoryName\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"duration\",\"type\":\"int\"}]}}},{\"name\":\"paymentMethod\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentMethodValue\",\"fields\":[{\"name\":\"paymentMethodId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"last4\",\"type\":\"int\"},{\"name\":\"expiration\",\"type\":\"int\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentMethodTypeEnum\",\"symbols\":[\"Visa\",\"Mastercard\",\"Amex\",\"Discover\"]}}]}],\"default\":null},{\"name\":\"discounts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DiscountValue\",\"fields\":[{\"name\":\"discountId\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"double\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"DiscountTypeEnum\",\"symbols\":[\"Percentage\",\"FlatAmount\"]}}]}}],\"default\":null},{\"name\":\"tax\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"fees\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FeeValue\",\"fields\":[{\"name\":\"amount\",\"type\":\"double\"},{\"name\":\"feeType\",\"type\":{\"type\":\"enum\",\"name\":\"FeeTypeEnum\",\"symbols\":[\"Percentage\",\"FlatAmount\"]}}]}],\"default\":null},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"AppointmentStatusEnum\",\"symbols\":[\"Proposed\",\"Scheduled\",\"InProgress\",\"Cancelled\",\"Rejected\",\"TimedOut\",\"Completed\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AppointmentView> ENCODER =
      new BinaryMessageEncoder<AppointmentView>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AppointmentView> DECODER =
      new BinaryMessageDecoder<AppointmentView>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AppointmentView> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AppointmentView> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AppointmentView> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AppointmentView>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AppointmentView to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AppointmentView from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AppointmentView instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AppointmentView fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence appointmentId;
   private com.leftybeauty.schema.avro.PersonValue leftyUserProvider;
   private com.leftybeauty.schema.avro.PersonValue leftyUserClient;
   private long appointmentDateTime;
   private com.leftybeauty.schema.avro.AddressValue clientAddress;
   private java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> leftyProviderServices;
   private com.leftybeauty.schema.avro.PaymentMethodValue paymentMethod;
   private java.util.List<com.leftybeauty.schema.avro.DiscountValue> discounts;
   private java.lang.Integer tax;
   private com.leftybeauty.schema.avro.FeeValue fees;
   private com.leftybeauty.schema.avro.AppointmentStatusEnum status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AppointmentView() {}

  /**
   * All-args constructor.
   * @param appointmentId The new value for appointmentId
   * @param leftyUserProvider The new value for leftyUserProvider
   * @param leftyUserClient The new value for leftyUserClient
   * @param appointmentDateTime The new value for appointmentDateTime
   * @param clientAddress The new value for clientAddress
   * @param leftyProviderServices The new value for leftyProviderServices
   * @param paymentMethod The new value for paymentMethod
   * @param discounts The new value for discounts
   * @param tax The new value for tax
   * @param fees The new value for fees
   * @param status The new value for status
   */
  public AppointmentView(java.lang.CharSequence appointmentId, com.leftybeauty.schema.avro.PersonValue leftyUserProvider, com.leftybeauty.schema.avro.PersonValue leftyUserClient, java.lang.Long appointmentDateTime, com.leftybeauty.schema.avro.AddressValue clientAddress, java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> leftyProviderServices, com.leftybeauty.schema.avro.PaymentMethodValue paymentMethod, java.util.List<com.leftybeauty.schema.avro.DiscountValue> discounts, java.lang.Integer tax, com.leftybeauty.schema.avro.FeeValue fees, com.leftybeauty.schema.avro.AppointmentStatusEnum status) {
    this.appointmentId = appointmentId;
    this.leftyUserProvider = leftyUserProvider;
    this.leftyUserClient = leftyUserClient;
    this.appointmentDateTime = appointmentDateTime;
    this.clientAddress = clientAddress;
    this.leftyProviderServices = leftyProviderServices;
    this.paymentMethod = paymentMethod;
    this.discounts = discounts;
    this.tax = tax;
    this.fees = fees;
    this.status = status;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appointmentId;
    case 1: return leftyUserProvider;
    case 2: return leftyUserClient;
    case 3: return appointmentDateTime;
    case 4: return clientAddress;
    case 5: return leftyProviderServices;
    case 6: return paymentMethod;
    case 7: return discounts;
    case 8: return tax;
    case 9: return fees;
    case 10: return status;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appointmentId = (java.lang.CharSequence)value$; break;
    case 1: leftyUserProvider = (com.leftybeauty.schema.avro.PersonValue)value$; break;
    case 2: leftyUserClient = (com.leftybeauty.schema.avro.PersonValue)value$; break;
    case 3: appointmentDateTime = (java.lang.Long)value$; break;
    case 4: clientAddress = (com.leftybeauty.schema.avro.AddressValue)value$; break;
    case 5: leftyProviderServices = (java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue>)value$; break;
    case 6: paymentMethod = (com.leftybeauty.schema.avro.PaymentMethodValue)value$; break;
    case 7: discounts = (java.util.List<com.leftybeauty.schema.avro.DiscountValue>)value$; break;
    case 8: tax = (java.lang.Integer)value$; break;
    case 9: fees = (com.leftybeauty.schema.avro.FeeValue)value$; break;
    case 10: status = (com.leftybeauty.schema.avro.AppointmentStatusEnum)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'appointmentId' field.
   * @return The value of the 'appointmentId' field.
   */
  public java.lang.CharSequence getAppointmentId() {
    return appointmentId;
  }


  /**
   * Sets the value of the 'appointmentId' field.
   * @param value the value to set.
   */
  public void setAppointmentId(java.lang.CharSequence value) {
    this.appointmentId = value;
  }

  /**
   * Gets the value of the 'leftyUserProvider' field.
   * @return The value of the 'leftyUserProvider' field.
   */
  public com.leftybeauty.schema.avro.PersonValue getLeftyUserProvider() {
    return leftyUserProvider;
  }


  /**
   * Sets the value of the 'leftyUserProvider' field.
   * @param value the value to set.
   */
  public void setLeftyUserProvider(com.leftybeauty.schema.avro.PersonValue value) {
    this.leftyUserProvider = value;
  }

  /**
   * Gets the value of the 'leftyUserClient' field.
   * @return The value of the 'leftyUserClient' field.
   */
  public com.leftybeauty.schema.avro.PersonValue getLeftyUserClient() {
    return leftyUserClient;
  }


  /**
   * Sets the value of the 'leftyUserClient' field.
   * @param value the value to set.
   */
  public void setLeftyUserClient(com.leftybeauty.schema.avro.PersonValue value) {
    this.leftyUserClient = value;
  }

  /**
   * Gets the value of the 'appointmentDateTime' field.
   * @return The value of the 'appointmentDateTime' field.
   */
  public long getAppointmentDateTime() {
    return appointmentDateTime;
  }


  /**
   * Sets the value of the 'appointmentDateTime' field.
   * @param value the value to set.
   */
  public void setAppointmentDateTime(long value) {
    this.appointmentDateTime = value;
  }

  /**
   * Gets the value of the 'clientAddress' field.
   * @return The value of the 'clientAddress' field.
   */
  public com.leftybeauty.schema.avro.AddressValue getClientAddress() {
    return clientAddress;
  }


  /**
   * Sets the value of the 'clientAddress' field.
   * @param value the value to set.
   */
  public void setClientAddress(com.leftybeauty.schema.avro.AddressValue value) {
    this.clientAddress = value;
  }

  /**
   * Gets the value of the 'leftyProviderServices' field.
   * @return The value of the 'leftyProviderServices' field.
   */
  public java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> getLeftyProviderServices() {
    return leftyProviderServices;
  }


  /**
   * Sets the value of the 'leftyProviderServices' field.
   * @param value the value to set.
   */
  public void setLeftyProviderServices(java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> value) {
    this.leftyProviderServices = value;
  }

  /**
   * Gets the value of the 'paymentMethod' field.
   * @return The value of the 'paymentMethod' field.
   */
  public com.leftybeauty.schema.avro.PaymentMethodValue getPaymentMethod() {
    return paymentMethod;
  }


  /**
   * Sets the value of the 'paymentMethod' field.
   * @param value the value to set.
   */
  public void setPaymentMethod(com.leftybeauty.schema.avro.PaymentMethodValue value) {
    this.paymentMethod = value;
  }

  /**
   * Gets the value of the 'discounts' field.
   * @return The value of the 'discounts' field.
   */
  public java.util.List<com.leftybeauty.schema.avro.DiscountValue> getDiscounts() {
    return discounts;
  }


  /**
   * Sets the value of the 'discounts' field.
   * @param value the value to set.
   */
  public void setDiscounts(java.util.List<com.leftybeauty.schema.avro.DiscountValue> value) {
    this.discounts = value;
  }

  /**
   * Gets the value of the 'tax' field.
   * @return The value of the 'tax' field.
   */
  public java.lang.Integer getTax() {
    return tax;
  }


  /**
   * Sets the value of the 'tax' field.
   * @param value the value to set.
   */
  public void setTax(java.lang.Integer value) {
    this.tax = value;
  }

  /**
   * Gets the value of the 'fees' field.
   * @return The value of the 'fees' field.
   */
  public com.leftybeauty.schema.avro.FeeValue getFees() {
    return fees;
  }


  /**
   * Sets the value of the 'fees' field.
   * @param value the value to set.
   */
  public void setFees(com.leftybeauty.schema.avro.FeeValue value) {
    this.fees = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.leftybeauty.schema.avro.AppointmentStatusEnum getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.leftybeauty.schema.avro.AppointmentStatusEnum value) {
    this.status = value;
  }

  /**
   * Creates a new AppointmentView RecordBuilder.
   * @return A new AppointmentView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentView.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.AppointmentView.Builder();
  }

  /**
   * Creates a new AppointmentView RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AppointmentView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentView.Builder newBuilder(com.leftybeauty.schema.avro.AppointmentView.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AppointmentView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AppointmentView.Builder(other);
    }
  }

  /**
   * Creates a new AppointmentView RecordBuilder by copying an existing AppointmentView instance.
   * @param other The existing instance to copy.
   * @return A new AppointmentView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentView.Builder newBuilder(com.leftybeauty.schema.avro.AppointmentView other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AppointmentView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AppointmentView.Builder(other);
    }
  }

  /**
   * RecordBuilder for AppointmentView instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AppointmentView>
    implements org.apache.avro.data.RecordBuilder<AppointmentView> {

    private java.lang.CharSequence appointmentId;
    private com.leftybeauty.schema.avro.PersonValue leftyUserProvider;
    private com.leftybeauty.schema.avro.PersonValue.Builder leftyUserProviderBuilder;
    private com.leftybeauty.schema.avro.PersonValue leftyUserClient;
    private com.leftybeauty.schema.avro.PersonValue.Builder leftyUserClientBuilder;
    private long appointmentDateTime;
    private com.leftybeauty.schema.avro.AddressValue clientAddress;
    private com.leftybeauty.schema.avro.AddressValue.Builder clientAddressBuilder;
    private java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> leftyProviderServices;
    private com.leftybeauty.schema.avro.PaymentMethodValue paymentMethod;
    private com.leftybeauty.schema.avro.PaymentMethodValue.Builder paymentMethodBuilder;
    private java.util.List<com.leftybeauty.schema.avro.DiscountValue> discounts;
    private java.lang.Integer tax;
    private com.leftybeauty.schema.avro.FeeValue fees;
    private com.leftybeauty.schema.avro.FeeValue.Builder feesBuilder;
    private com.leftybeauty.schema.avro.AppointmentStatusEnum status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AppointmentView.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.leftyUserProvider)) {
        this.leftyUserProvider = data().deepCopy(fields()[1].schema(), other.leftyUserProvider);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasLeftyUserProviderBuilder()) {
        this.leftyUserProviderBuilder = com.leftybeauty.schema.avro.PersonValue.newBuilder(other.getLeftyUserProviderBuilder());
      }
      if (isValidValue(fields()[2], other.leftyUserClient)) {
        this.leftyUserClient = data().deepCopy(fields()[2].schema(), other.leftyUserClient);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasLeftyUserClientBuilder()) {
        this.leftyUserClientBuilder = com.leftybeauty.schema.avro.PersonValue.newBuilder(other.getLeftyUserClientBuilder());
      }
      if (isValidValue(fields()[3], other.appointmentDateTime)) {
        this.appointmentDateTime = data().deepCopy(fields()[3].schema(), other.appointmentDateTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.clientAddress)) {
        this.clientAddress = data().deepCopy(fields()[4].schema(), other.clientAddress);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasClientAddressBuilder()) {
        this.clientAddressBuilder = com.leftybeauty.schema.avro.AddressValue.newBuilder(other.getClientAddressBuilder());
      }
      if (isValidValue(fields()[5], other.leftyProviderServices)) {
        this.leftyProviderServices = data().deepCopy(fields()[5].schema(), other.leftyProviderServices);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.paymentMethod)) {
        this.paymentMethod = data().deepCopy(fields()[6].schema(), other.paymentMethod);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasPaymentMethodBuilder()) {
        this.paymentMethodBuilder = com.leftybeauty.schema.avro.PaymentMethodValue.newBuilder(other.getPaymentMethodBuilder());
      }
      if (isValidValue(fields()[7], other.discounts)) {
        this.discounts = data().deepCopy(fields()[7].schema(), other.discounts);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.tax)) {
        this.tax = data().deepCopy(fields()[8].schema(), other.tax);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.fees)) {
        this.fees = data().deepCopy(fields()[9].schema(), other.fees);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasFeesBuilder()) {
        this.feesBuilder = com.leftybeauty.schema.avro.FeeValue.newBuilder(other.getFeesBuilder());
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing AppointmentView instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AppointmentView other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.leftyUserProvider)) {
        this.leftyUserProvider = data().deepCopy(fields()[1].schema(), other.leftyUserProvider);
        fieldSetFlags()[1] = true;
      }
      this.leftyUserProviderBuilder = null;
      if (isValidValue(fields()[2], other.leftyUserClient)) {
        this.leftyUserClient = data().deepCopy(fields()[2].schema(), other.leftyUserClient);
        fieldSetFlags()[2] = true;
      }
      this.leftyUserClientBuilder = null;
      if (isValidValue(fields()[3], other.appointmentDateTime)) {
        this.appointmentDateTime = data().deepCopy(fields()[3].schema(), other.appointmentDateTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clientAddress)) {
        this.clientAddress = data().deepCopy(fields()[4].schema(), other.clientAddress);
        fieldSetFlags()[4] = true;
      }
      this.clientAddressBuilder = null;
      if (isValidValue(fields()[5], other.leftyProviderServices)) {
        this.leftyProviderServices = data().deepCopy(fields()[5].schema(), other.leftyProviderServices);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.paymentMethod)) {
        this.paymentMethod = data().deepCopy(fields()[6].schema(), other.paymentMethod);
        fieldSetFlags()[6] = true;
      }
      this.paymentMethodBuilder = null;
      if (isValidValue(fields()[7], other.discounts)) {
        this.discounts = data().deepCopy(fields()[7].schema(), other.discounts);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tax)) {
        this.tax = data().deepCopy(fields()[8].schema(), other.tax);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.fees)) {
        this.fees = data().deepCopy(fields()[9].schema(), other.fees);
        fieldSetFlags()[9] = true;
      }
      this.feesBuilder = null;
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'appointmentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAppointmentId() {
      return appointmentId;
    }


    /**
      * Sets the value of the 'appointmentId' field.
      * @param value The value of 'appointmentId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setAppointmentId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.appointmentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentId' field has been set.
      * @return True if the 'appointmentId' field has been set, false otherwise.
      */
    public boolean hasAppointmentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appointmentId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearAppointmentId() {
      appointmentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'leftyUserProvider' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.PersonValue getLeftyUserProvider() {
      return leftyUserProvider;
    }


    /**
      * Sets the value of the 'leftyUserProvider' field.
      * @param value The value of 'leftyUserProvider'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setLeftyUserProvider(com.leftybeauty.schema.avro.PersonValue value) {
      validate(fields()[1], value);
      this.leftyUserProviderBuilder = null;
      this.leftyUserProvider = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyUserProvider' field has been set.
      * @return True if the 'leftyUserProvider' field has been set, false otherwise.
      */
    public boolean hasLeftyUserProvider() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'leftyUserProvider' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.PersonValue.Builder getLeftyUserProviderBuilder() {
      if (leftyUserProviderBuilder == null) {
        if (hasLeftyUserProvider()) {
          setLeftyUserProviderBuilder(com.leftybeauty.schema.avro.PersonValue.newBuilder(leftyUserProvider));
        } else {
          setLeftyUserProviderBuilder(com.leftybeauty.schema.avro.PersonValue.newBuilder());
        }
      }
      return leftyUserProviderBuilder;
    }

    /**
     * Sets the Builder instance for the 'leftyUserProvider' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AppointmentView.Builder setLeftyUserProviderBuilder(com.leftybeauty.schema.avro.PersonValue.Builder value) {
      clearLeftyUserProvider();
      leftyUserProviderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'leftyUserProvider' field has an active Builder instance
     * @return True if the 'leftyUserProvider' field has an active Builder instance
     */
    public boolean hasLeftyUserProviderBuilder() {
      return leftyUserProviderBuilder != null;
    }

    /**
      * Clears the value of the 'leftyUserProvider' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearLeftyUserProvider() {
      leftyUserProvider = null;
      leftyUserProviderBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'leftyUserClient' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.PersonValue getLeftyUserClient() {
      return leftyUserClient;
    }


    /**
      * Sets the value of the 'leftyUserClient' field.
      * @param value The value of 'leftyUserClient'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setLeftyUserClient(com.leftybeauty.schema.avro.PersonValue value) {
      validate(fields()[2], value);
      this.leftyUserClientBuilder = null;
      this.leftyUserClient = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyUserClient' field has been set.
      * @return True if the 'leftyUserClient' field has been set, false otherwise.
      */
    public boolean hasLeftyUserClient() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'leftyUserClient' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.PersonValue.Builder getLeftyUserClientBuilder() {
      if (leftyUserClientBuilder == null) {
        if (hasLeftyUserClient()) {
          setLeftyUserClientBuilder(com.leftybeauty.schema.avro.PersonValue.newBuilder(leftyUserClient));
        } else {
          setLeftyUserClientBuilder(com.leftybeauty.schema.avro.PersonValue.newBuilder());
        }
      }
      return leftyUserClientBuilder;
    }

    /**
     * Sets the Builder instance for the 'leftyUserClient' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AppointmentView.Builder setLeftyUserClientBuilder(com.leftybeauty.schema.avro.PersonValue.Builder value) {
      clearLeftyUserClient();
      leftyUserClientBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'leftyUserClient' field has an active Builder instance
     * @return True if the 'leftyUserClient' field has an active Builder instance
     */
    public boolean hasLeftyUserClientBuilder() {
      return leftyUserClientBuilder != null;
    }

    /**
      * Clears the value of the 'leftyUserClient' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearLeftyUserClient() {
      leftyUserClient = null;
      leftyUserClientBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'appointmentDateTime' field.
      * @return The value.
      */
    public long getAppointmentDateTime() {
      return appointmentDateTime;
    }


    /**
      * Sets the value of the 'appointmentDateTime' field.
      * @param value The value of 'appointmentDateTime'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setAppointmentDateTime(long value) {
      validate(fields()[3], value);
      this.appointmentDateTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentDateTime' field has been set.
      * @return True if the 'appointmentDateTime' field has been set, false otherwise.
      */
    public boolean hasAppointmentDateTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'appointmentDateTime' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearAppointmentDateTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientAddress' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.AddressValue getClientAddress() {
      return clientAddress;
    }


    /**
      * Sets the value of the 'clientAddress' field.
      * @param value The value of 'clientAddress'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setClientAddress(com.leftybeauty.schema.avro.AddressValue value) {
      validate(fields()[4], value);
      this.clientAddressBuilder = null;
      this.clientAddress = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'clientAddress' field has been set.
      * @return True if the 'clientAddress' field has been set, false otherwise.
      */
    public boolean hasClientAddress() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'clientAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.AddressValue.Builder getClientAddressBuilder() {
      if (clientAddressBuilder == null) {
        if (hasClientAddress()) {
          setClientAddressBuilder(com.leftybeauty.schema.avro.AddressValue.newBuilder(clientAddress));
        } else {
          setClientAddressBuilder(com.leftybeauty.schema.avro.AddressValue.newBuilder());
        }
      }
      return clientAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'clientAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AppointmentView.Builder setClientAddressBuilder(com.leftybeauty.schema.avro.AddressValue.Builder value) {
      clearClientAddress();
      clientAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'clientAddress' field has an active Builder instance
     * @return True if the 'clientAddress' field has an active Builder instance
     */
    public boolean hasClientAddressBuilder() {
      return clientAddressBuilder != null;
    }

    /**
      * Clears the value of the 'clientAddress' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearClientAddress() {
      clientAddress = null;
      clientAddressBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'leftyProviderServices' field.
      * @return The value.
      */
    public java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> getLeftyProviderServices() {
      return leftyProviderServices;
    }


    /**
      * Sets the value of the 'leftyProviderServices' field.
      * @param value The value of 'leftyProviderServices'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setLeftyProviderServices(java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> value) {
      validate(fields()[5], value);
      this.leftyProviderServices = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyProviderServices' field has been set.
      * @return True if the 'leftyProviderServices' field has been set, false otherwise.
      */
    public boolean hasLeftyProviderServices() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'leftyProviderServices' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearLeftyProviderServices() {
      leftyProviderServices = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentMethod' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.PaymentMethodValue getPaymentMethod() {
      return paymentMethod;
    }


    /**
      * Sets the value of the 'paymentMethod' field.
      * @param value The value of 'paymentMethod'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setPaymentMethod(com.leftybeauty.schema.avro.PaymentMethodValue value) {
      validate(fields()[6], value);
      this.paymentMethodBuilder = null;
      this.paymentMethod = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentMethod' field has been set.
      * @return True if the 'paymentMethod' field has been set, false otherwise.
      */
    public boolean hasPaymentMethod() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'paymentMethod' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.PaymentMethodValue.Builder getPaymentMethodBuilder() {
      if (paymentMethodBuilder == null) {
        if (hasPaymentMethod()) {
          setPaymentMethodBuilder(com.leftybeauty.schema.avro.PaymentMethodValue.newBuilder(paymentMethod));
        } else {
          setPaymentMethodBuilder(com.leftybeauty.schema.avro.PaymentMethodValue.newBuilder());
        }
      }
      return paymentMethodBuilder;
    }

    /**
     * Sets the Builder instance for the 'paymentMethod' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AppointmentView.Builder setPaymentMethodBuilder(com.leftybeauty.schema.avro.PaymentMethodValue.Builder value) {
      clearPaymentMethod();
      paymentMethodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paymentMethod' field has an active Builder instance
     * @return True if the 'paymentMethod' field has an active Builder instance
     */
    public boolean hasPaymentMethodBuilder() {
      return paymentMethodBuilder != null;
    }

    /**
      * Clears the value of the 'paymentMethod' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearPaymentMethod() {
      paymentMethod = null;
      paymentMethodBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'discounts' field.
      * @return The value.
      */
    public java.util.List<com.leftybeauty.schema.avro.DiscountValue> getDiscounts() {
      return discounts;
    }


    /**
      * Sets the value of the 'discounts' field.
      * @param value The value of 'discounts'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setDiscounts(java.util.List<com.leftybeauty.schema.avro.DiscountValue> value) {
      validate(fields()[7], value);
      this.discounts = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'discounts' field has been set.
      * @return True if the 'discounts' field has been set, false otherwise.
      */
    public boolean hasDiscounts() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'discounts' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearDiscounts() {
      discounts = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'tax' field.
      * @return The value.
      */
    public java.lang.Integer getTax() {
      return tax;
    }


    /**
      * Sets the value of the 'tax' field.
      * @param value The value of 'tax'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setTax(java.lang.Integer value) {
      validate(fields()[8], value);
      this.tax = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'tax' field has been set.
      * @return True if the 'tax' field has been set, false otherwise.
      */
    public boolean hasTax() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'tax' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearTax() {
      tax = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'fees' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.FeeValue getFees() {
      return fees;
    }


    /**
      * Sets the value of the 'fees' field.
      * @param value The value of 'fees'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setFees(com.leftybeauty.schema.avro.FeeValue value) {
      validate(fields()[9], value);
      this.feesBuilder = null;
      this.fees = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'fees' field has been set.
      * @return True if the 'fees' field has been set, false otherwise.
      */
    public boolean hasFees() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'fees' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.FeeValue.Builder getFeesBuilder() {
      if (feesBuilder == null) {
        if (hasFees()) {
          setFeesBuilder(com.leftybeauty.schema.avro.FeeValue.newBuilder(fees));
        } else {
          setFeesBuilder(com.leftybeauty.schema.avro.FeeValue.newBuilder());
        }
      }
      return feesBuilder;
    }

    /**
     * Sets the Builder instance for the 'fees' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AppointmentView.Builder setFeesBuilder(com.leftybeauty.schema.avro.FeeValue.Builder value) {
      clearFees();
      feesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fees' field has an active Builder instance
     * @return True if the 'fees' field has an active Builder instance
     */
    public boolean hasFeesBuilder() {
      return feesBuilder != null;
    }

    /**
      * Clears the value of the 'fees' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearFees() {
      fees = null;
      feesBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.AppointmentStatusEnum getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder setStatus(com.leftybeauty.schema.avro.AppointmentStatusEnum value) {
      validate(fields()[10], value);
      this.status = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentView.Builder clearStatus() {
      status = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AppointmentView build() {
      try {
        AppointmentView record = new AppointmentView();
        record.appointmentId = fieldSetFlags()[0] ? this.appointmentId : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (leftyUserProviderBuilder != null) {
          try {
            record.leftyUserProvider = this.leftyUserProviderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("leftyUserProvider"));
            throw e;
          }
        } else {
          record.leftyUserProvider = fieldSetFlags()[1] ? this.leftyUserProvider : (com.leftybeauty.schema.avro.PersonValue) defaultValue(fields()[1]);
        }
        if (leftyUserClientBuilder != null) {
          try {
            record.leftyUserClient = this.leftyUserClientBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("leftyUserClient"));
            throw e;
          }
        } else {
          record.leftyUserClient = fieldSetFlags()[2] ? this.leftyUserClient : (com.leftybeauty.schema.avro.PersonValue) defaultValue(fields()[2]);
        }
        record.appointmentDateTime = fieldSetFlags()[3] ? this.appointmentDateTime : (java.lang.Long) defaultValue(fields()[3]);
        if (clientAddressBuilder != null) {
          try {
            record.clientAddress = this.clientAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("clientAddress"));
            throw e;
          }
        } else {
          record.clientAddress = fieldSetFlags()[4] ? this.clientAddress : (com.leftybeauty.schema.avro.AddressValue) defaultValue(fields()[4]);
        }
        record.leftyProviderServices = fieldSetFlags()[5] ? this.leftyProviderServices : (java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue>) defaultValue(fields()[5]);
        if (paymentMethodBuilder != null) {
          try {
            record.paymentMethod = this.paymentMethodBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("paymentMethod"));
            throw e;
          }
        } else {
          record.paymentMethod = fieldSetFlags()[6] ? this.paymentMethod : (com.leftybeauty.schema.avro.PaymentMethodValue) defaultValue(fields()[6]);
        }
        record.discounts = fieldSetFlags()[7] ? this.discounts : (java.util.List<com.leftybeauty.schema.avro.DiscountValue>) defaultValue(fields()[7]);
        record.tax = fieldSetFlags()[8] ? this.tax : (java.lang.Integer) defaultValue(fields()[8]);
        if (feesBuilder != null) {
          try {
            record.fees = this.feesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fees"));
            throw e;
          }
        } else {
          record.fees = fieldSetFlags()[9] ? this.fees : (com.leftybeauty.schema.avro.FeeValue) defaultValue(fields()[9]);
        }
        record.status = fieldSetFlags()[10] ? this.status : (com.leftybeauty.schema.avro.AppointmentStatusEnum) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AppointmentView>
    WRITER$ = (org.apache.avro.io.DatumWriter<AppointmentView>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AppointmentView>
    READER$ = (org.apache.avro.io.DatumReader<AppointmentView>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.appointmentId);

    this.leftyUserProvider.customEncode(out);

    this.leftyUserClient.customEncode(out);

    out.writeLong(this.appointmentDateTime);

    this.clientAddress.customEncode(out);

    long size0 = this.leftyProviderServices.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.leftybeauty.schema.avro.LeftyProviderServiceValue e0: this.leftyProviderServices) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    if (this.paymentMethod == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.paymentMethod.customEncode(out);
    }

    if (this.discounts == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.discounts.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (com.leftybeauty.schema.avro.DiscountValue e1: this.discounts) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.tax == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.tax);
    }

    if (this.fees == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.fees.customEncode(out);
    }

    out.writeEnum(this.status.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);

      if (this.leftyUserProvider == null) {
        this.leftyUserProvider = new com.leftybeauty.schema.avro.PersonValue();
      }
      this.leftyUserProvider.customDecode(in);

      if (this.leftyUserClient == null) {
        this.leftyUserClient = new com.leftybeauty.schema.avro.PersonValue();
      }
      this.leftyUserClient.customDecode(in);

      this.appointmentDateTime = in.readLong();

      if (this.clientAddress == null) {
        this.clientAddress = new com.leftybeauty.schema.avro.AddressValue();
      }
      this.clientAddress.customDecode(in);

      long size0 = in.readArrayStart();
      java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> a0 = this.leftyProviderServices;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceValue>((int)size0, SCHEMA$.getField("leftyProviderServices").schema());
        this.leftyProviderServices = a0;
      } else a0.clear();
      SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceValue> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceValue>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.leftybeauty.schema.avro.LeftyProviderServiceValue e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.leftybeauty.schema.avro.LeftyProviderServiceValue();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.paymentMethod = null;
      } else {
        if (this.paymentMethod == null) {
          this.paymentMethod = new com.leftybeauty.schema.avro.PaymentMethodValue();
        }
        this.paymentMethod.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.discounts = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<com.leftybeauty.schema.avro.DiscountValue> a1 = this.discounts;
        if (a1 == null) {
          a1 = new SpecificData.Array<com.leftybeauty.schema.avro.DiscountValue>((int)size1, SCHEMA$.getField("discounts").schema().getTypes().get(1));
          this.discounts = a1;
        } else a1.clear();
        SpecificData.Array<com.leftybeauty.schema.avro.DiscountValue> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.DiscountValue>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            com.leftybeauty.schema.avro.DiscountValue e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new com.leftybeauty.schema.avro.DiscountValue();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.tax = null;
      } else {
        this.tax = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.fees = null;
      } else {
        if (this.fees == null) {
          this.fees = new com.leftybeauty.schema.avro.FeeValue();
        }
        this.fees.customDecode(in);
      }

      this.status = com.leftybeauty.schema.avro.AppointmentStatusEnum.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);
          break;

        case 1:
          if (this.leftyUserProvider == null) {
            this.leftyUserProvider = new com.leftybeauty.schema.avro.PersonValue();
          }
          this.leftyUserProvider.customDecode(in);
          break;

        case 2:
          if (this.leftyUserClient == null) {
            this.leftyUserClient = new com.leftybeauty.schema.avro.PersonValue();
          }
          this.leftyUserClient.customDecode(in);
          break;

        case 3:
          this.appointmentDateTime = in.readLong();
          break;

        case 4:
          if (this.clientAddress == null) {
            this.clientAddress = new com.leftybeauty.schema.avro.AddressValue();
          }
          this.clientAddress.customDecode(in);
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceValue> a0 = this.leftyProviderServices;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceValue>((int)size0, SCHEMA$.getField("leftyProviderServices").schema());
            this.leftyProviderServices = a0;
          } else a0.clear();
          SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceValue> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceValue>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.leftybeauty.schema.avro.LeftyProviderServiceValue e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.leftybeauty.schema.avro.LeftyProviderServiceValue();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.paymentMethod = null;
          } else {
            if (this.paymentMethod == null) {
              this.paymentMethod = new com.leftybeauty.schema.avro.PaymentMethodValue();
            }
            this.paymentMethod.customDecode(in);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.discounts = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<com.leftybeauty.schema.avro.DiscountValue> a1 = this.discounts;
            if (a1 == null) {
              a1 = new SpecificData.Array<com.leftybeauty.schema.avro.DiscountValue>((int)size1, SCHEMA$.getField("discounts").schema().getTypes().get(1));
              this.discounts = a1;
            } else a1.clear();
            SpecificData.Array<com.leftybeauty.schema.avro.DiscountValue> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.DiscountValue>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                com.leftybeauty.schema.avro.DiscountValue e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new com.leftybeauty.schema.avro.DiscountValue();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.tax = null;
          } else {
            this.tax = in.readInt();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.fees = null;
          } else {
            if (this.fees == null) {
              this.fees = new com.leftybeauty.schema.avro.FeeValue();
            }
            this.fees.customDecode(in);
          }
          break;

        case 10:
          this.status = com.leftybeauty.schema.avro.AppointmentStatusEnum.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










