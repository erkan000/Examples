/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AppointmentSource extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1177096989651761698L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AppointmentSource\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"appointmentId\",\"type\":\"string\"},{\"name\":\"leftyUserProviderId\",\"type\":\"string\"},{\"name\":\"clientAddressId\",\"type\":\"string\"},{\"name\":\"appointmentDateTime\",\"type\":\"long\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"AppointmentStatusEnum\",\"symbols\":[\"Proposed\",\"Scheduled\",\"InProgress\",\"Cancelled\",\"Rejected\",\"TimedOut\",\"Completed\"]}},{\"name\":\"leftyProviderServiceReferences\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LeftyProviderServiceSourceReferenceAt\",\"fields\":[{\"name\":\"leftyProviderServiceId\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"}]}}},{\"name\":\"actor\",\"type\":{\"type\":\"enum\",\"name\":\"LeftyUserTypeEnum\",\"symbols\":[\"Client\",\"Provider\"]}},{\"name\":\"financialAccountReference\",\"type\":{\"type\":\"record\",\"name\":\"FinancialAccountSourceReferenceAt\",\"fields\":[{\"name\":\"financialAccountId\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"}]}},{\"name\":\"transactionIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AppointmentSource> ENCODER =
      new BinaryMessageEncoder<AppointmentSource>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AppointmentSource> DECODER =
      new BinaryMessageDecoder<AppointmentSource>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AppointmentSource> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AppointmentSource> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AppointmentSource> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AppointmentSource>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AppointmentSource to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AppointmentSource from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AppointmentSource instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AppointmentSource fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence appointmentId;
   private java.lang.CharSequence leftyUserProviderId;
   private java.lang.CharSequence clientAddressId;
   private long appointmentDateTime;
   private com.leftybeauty.schema.avro.AppointmentStatusEnum status;
   private java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> leftyProviderServiceReferences;
   private com.leftybeauty.schema.avro.LeftyUserTypeEnum actor;
   private com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt financialAccountReference;
   private java.util.List<java.lang.CharSequence> transactionIds;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AppointmentSource() {}

  /**
   * All-args constructor.
   * @param appointmentId The new value for appointmentId
   * @param leftyUserProviderId The new value for leftyUserProviderId
   * @param clientAddressId The new value for clientAddressId
   * @param appointmentDateTime The new value for appointmentDateTime
   * @param status The new value for status
   * @param leftyProviderServiceReferences The new value for leftyProviderServiceReferences
   * @param actor The new value for actor
   * @param financialAccountReference The new value for financialAccountReference
   * @param transactionIds The new value for transactionIds
   */
  public AppointmentSource(java.lang.CharSequence appointmentId, java.lang.CharSequence leftyUserProviderId, java.lang.CharSequence clientAddressId, java.lang.Long appointmentDateTime, com.leftybeauty.schema.avro.AppointmentStatusEnum status, java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> leftyProviderServiceReferences, com.leftybeauty.schema.avro.LeftyUserTypeEnum actor, com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt financialAccountReference, java.util.List<java.lang.CharSequence> transactionIds) {
    this.appointmentId = appointmentId;
    this.leftyUserProviderId = leftyUserProviderId;
    this.clientAddressId = clientAddressId;
    this.appointmentDateTime = appointmentDateTime;
    this.status = status;
    this.leftyProviderServiceReferences = leftyProviderServiceReferences;
    this.actor = actor;
    this.financialAccountReference = financialAccountReference;
    this.transactionIds = transactionIds;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appointmentId;
    case 1: return leftyUserProviderId;
    case 2: return clientAddressId;
    case 3: return appointmentDateTime;
    case 4: return status;
    case 5: return leftyProviderServiceReferences;
    case 6: return actor;
    case 7: return financialAccountReference;
    case 8: return transactionIds;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appointmentId = (java.lang.CharSequence)value$; break;
    case 1: leftyUserProviderId = (java.lang.CharSequence)value$; break;
    case 2: clientAddressId = (java.lang.CharSequence)value$; break;
    case 3: appointmentDateTime = (java.lang.Long)value$; break;
    case 4: status = (com.leftybeauty.schema.avro.AppointmentStatusEnum)value$; break;
    case 5: leftyProviderServiceReferences = (java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt>)value$; break;
    case 6: actor = (com.leftybeauty.schema.avro.LeftyUserTypeEnum)value$; break;
    case 7: financialAccountReference = (com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt)value$; break;
    case 8: transactionIds = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'appointmentId' field.
   * @return The value of the 'appointmentId' field.
   */
  public java.lang.CharSequence getAppointmentId() {
    return appointmentId;
  }


  /**
   * Sets the value of the 'appointmentId' field.
   * @param value the value to set.
   */
  public void setAppointmentId(java.lang.CharSequence value) {
    this.appointmentId = value;
  }

  /**
   * Gets the value of the 'leftyUserProviderId' field.
   * @return The value of the 'leftyUserProviderId' field.
   */
  public java.lang.CharSequence getLeftyUserProviderId() {
    return leftyUserProviderId;
  }


  /**
   * Sets the value of the 'leftyUserProviderId' field.
   * @param value the value to set.
   */
  public void setLeftyUserProviderId(java.lang.CharSequence value) {
    this.leftyUserProviderId = value;
  }

  /**
   * Gets the value of the 'clientAddressId' field.
   * @return The value of the 'clientAddressId' field.
   */
  public java.lang.CharSequence getClientAddressId() {
    return clientAddressId;
  }


  /**
   * Sets the value of the 'clientAddressId' field.
   * @param value the value to set.
   */
  public void setClientAddressId(java.lang.CharSequence value) {
    this.clientAddressId = value;
  }

  /**
   * Gets the value of the 'appointmentDateTime' field.
   * @return The value of the 'appointmentDateTime' field.
   */
  public long getAppointmentDateTime() {
    return appointmentDateTime;
  }


  /**
   * Sets the value of the 'appointmentDateTime' field.
   * @param value the value to set.
   */
  public void setAppointmentDateTime(long value) {
    this.appointmentDateTime = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.leftybeauty.schema.avro.AppointmentStatusEnum getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.leftybeauty.schema.avro.AppointmentStatusEnum value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'leftyProviderServiceReferences' field.
   * @return The value of the 'leftyProviderServiceReferences' field.
   */
  public java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> getLeftyProviderServiceReferences() {
    return leftyProviderServiceReferences;
  }


  /**
   * Sets the value of the 'leftyProviderServiceReferences' field.
   * @param value the value to set.
   */
  public void setLeftyProviderServiceReferences(java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> value) {
    this.leftyProviderServiceReferences = value;
  }

  /**
   * Gets the value of the 'actor' field.
   * @return The value of the 'actor' field.
   */
  public com.leftybeauty.schema.avro.LeftyUserTypeEnum getActor() {
    return actor;
  }


  /**
   * Sets the value of the 'actor' field.
   * @param value the value to set.
   */
  public void setActor(com.leftybeauty.schema.avro.LeftyUserTypeEnum value) {
    this.actor = value;
  }

  /**
   * Gets the value of the 'financialAccountReference' field.
   * @return The value of the 'financialAccountReference' field.
   */
  public com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt getFinancialAccountReference() {
    return financialAccountReference;
  }


  /**
   * Sets the value of the 'financialAccountReference' field.
   * @param value the value to set.
   */
  public void setFinancialAccountReference(com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt value) {
    this.financialAccountReference = value;
  }

  /**
   * Gets the value of the 'transactionIds' field.
   * @return The value of the 'transactionIds' field.
   */
  public java.util.List<java.lang.CharSequence> getTransactionIds() {
    return transactionIds;
  }


  /**
   * Sets the value of the 'transactionIds' field.
   * @param value the value to set.
   */
  public void setTransactionIds(java.util.List<java.lang.CharSequence> value) {
    this.transactionIds = value;
  }

  /**
   * Creates a new AppointmentSource RecordBuilder.
   * @return A new AppointmentSource RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentSource.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.AppointmentSource.Builder();
  }

  /**
   * Creates a new AppointmentSource RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AppointmentSource RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentSource.Builder newBuilder(com.leftybeauty.schema.avro.AppointmentSource.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AppointmentSource.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AppointmentSource.Builder(other);
    }
  }

  /**
   * Creates a new AppointmentSource RecordBuilder by copying an existing AppointmentSource instance.
   * @param other The existing instance to copy.
   * @return A new AppointmentSource RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentSource.Builder newBuilder(com.leftybeauty.schema.avro.AppointmentSource other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AppointmentSource.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AppointmentSource.Builder(other);
    }
  }

  /**
   * RecordBuilder for AppointmentSource instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AppointmentSource>
    implements org.apache.avro.data.RecordBuilder<AppointmentSource> {

    private java.lang.CharSequence appointmentId;
    private java.lang.CharSequence leftyUserProviderId;
    private java.lang.CharSequence clientAddressId;
    private long appointmentDateTime;
    private com.leftybeauty.schema.avro.AppointmentStatusEnum status;
    private java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> leftyProviderServiceReferences;
    private com.leftybeauty.schema.avro.LeftyUserTypeEnum actor;
    private com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt financialAccountReference;
    private com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt.Builder financialAccountReferenceBuilder;
    private java.util.List<java.lang.CharSequence> transactionIds;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AppointmentSource.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.leftyUserProviderId)) {
        this.leftyUserProviderId = data().deepCopy(fields()[1].schema(), other.leftyUserProviderId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.clientAddressId)) {
        this.clientAddressId = data().deepCopy(fields()[2].schema(), other.clientAddressId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.appointmentDateTime)) {
        this.appointmentDateTime = data().deepCopy(fields()[3].schema(), other.appointmentDateTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.leftyProviderServiceReferences)) {
        this.leftyProviderServiceReferences = data().deepCopy(fields()[5].schema(), other.leftyProviderServiceReferences);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.actor)) {
        this.actor = data().deepCopy(fields()[6].schema(), other.actor);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.financialAccountReference)) {
        this.financialAccountReference = data().deepCopy(fields()[7].schema(), other.financialAccountReference);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasFinancialAccountReferenceBuilder()) {
        this.financialAccountReferenceBuilder = com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt.newBuilder(other.getFinancialAccountReferenceBuilder());
      }
      if (isValidValue(fields()[8], other.transactionIds)) {
        this.transactionIds = data().deepCopy(fields()[8].schema(), other.transactionIds);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing AppointmentSource instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AppointmentSource other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.leftyUserProviderId)) {
        this.leftyUserProviderId = data().deepCopy(fields()[1].schema(), other.leftyUserProviderId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.clientAddressId)) {
        this.clientAddressId = data().deepCopy(fields()[2].schema(), other.clientAddressId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.appointmentDateTime)) {
        this.appointmentDateTime = data().deepCopy(fields()[3].schema(), other.appointmentDateTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.leftyProviderServiceReferences)) {
        this.leftyProviderServiceReferences = data().deepCopy(fields()[5].schema(), other.leftyProviderServiceReferences);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.actor)) {
        this.actor = data().deepCopy(fields()[6].schema(), other.actor);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.financialAccountReference)) {
        this.financialAccountReference = data().deepCopy(fields()[7].schema(), other.financialAccountReference);
        fieldSetFlags()[7] = true;
      }
      this.financialAccountReferenceBuilder = null;
      if (isValidValue(fields()[8], other.transactionIds)) {
        this.transactionIds = data().deepCopy(fields()[8].schema(), other.transactionIds);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'appointmentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAppointmentId() {
      return appointmentId;
    }


    /**
      * Sets the value of the 'appointmentId' field.
      * @param value The value of 'appointmentId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setAppointmentId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.appointmentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentId' field has been set.
      * @return True if the 'appointmentId' field has been set, false otherwise.
      */
    public boolean hasAppointmentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appointmentId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearAppointmentId() {
      appointmentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'leftyUserProviderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeftyUserProviderId() {
      return leftyUserProviderId;
    }


    /**
      * Sets the value of the 'leftyUserProviderId' field.
      * @param value The value of 'leftyUserProviderId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setLeftyUserProviderId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.leftyUserProviderId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyUserProviderId' field has been set.
      * @return True if the 'leftyUserProviderId' field has been set, false otherwise.
      */
    public boolean hasLeftyUserProviderId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'leftyUserProviderId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearLeftyUserProviderId() {
      leftyUserProviderId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientAddressId' field.
      * @return The value.
      */
    public java.lang.CharSequence getClientAddressId() {
      return clientAddressId;
    }


    /**
      * Sets the value of the 'clientAddressId' field.
      * @param value The value of 'clientAddressId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setClientAddressId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.clientAddressId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'clientAddressId' field has been set.
      * @return True if the 'clientAddressId' field has been set, false otherwise.
      */
    public boolean hasClientAddressId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'clientAddressId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearClientAddressId() {
      clientAddressId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'appointmentDateTime' field.
      * @return The value.
      */
    public long getAppointmentDateTime() {
      return appointmentDateTime;
    }


    /**
      * Sets the value of the 'appointmentDateTime' field.
      * @param value The value of 'appointmentDateTime'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setAppointmentDateTime(long value) {
      validate(fields()[3], value);
      this.appointmentDateTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentDateTime' field has been set.
      * @return True if the 'appointmentDateTime' field has been set, false otherwise.
      */
    public boolean hasAppointmentDateTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'appointmentDateTime' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearAppointmentDateTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.AppointmentStatusEnum getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setStatus(com.leftybeauty.schema.avro.AppointmentStatusEnum value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'leftyProviderServiceReferences' field.
      * @return The value.
      */
    public java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> getLeftyProviderServiceReferences() {
      return leftyProviderServiceReferences;
    }


    /**
      * Sets the value of the 'leftyProviderServiceReferences' field.
      * @param value The value of 'leftyProviderServiceReferences'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setLeftyProviderServiceReferences(java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> value) {
      validate(fields()[5], value);
      this.leftyProviderServiceReferences = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyProviderServiceReferences' field has been set.
      * @return True if the 'leftyProviderServiceReferences' field has been set, false otherwise.
      */
    public boolean hasLeftyProviderServiceReferences() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'leftyProviderServiceReferences' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearLeftyProviderServiceReferences() {
      leftyProviderServiceReferences = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'actor' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.LeftyUserTypeEnum getActor() {
      return actor;
    }


    /**
      * Sets the value of the 'actor' field.
      * @param value The value of 'actor'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setActor(com.leftybeauty.schema.avro.LeftyUserTypeEnum value) {
      validate(fields()[6], value);
      this.actor = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'actor' field has been set.
      * @return True if the 'actor' field has been set, false otherwise.
      */
    public boolean hasActor() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'actor' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearActor() {
      actor = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'financialAccountReference' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt getFinancialAccountReference() {
      return financialAccountReference;
    }


    /**
      * Sets the value of the 'financialAccountReference' field.
      * @param value The value of 'financialAccountReference'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setFinancialAccountReference(com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt value) {
      validate(fields()[7], value);
      this.financialAccountReferenceBuilder = null;
      this.financialAccountReference = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'financialAccountReference' field has been set.
      * @return True if the 'financialAccountReference' field has been set, false otherwise.
      */
    public boolean hasFinancialAccountReference() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'financialAccountReference' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt.Builder getFinancialAccountReferenceBuilder() {
      if (financialAccountReferenceBuilder == null) {
        if (hasFinancialAccountReference()) {
          setFinancialAccountReferenceBuilder(com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt.newBuilder(financialAccountReference));
        } else {
          setFinancialAccountReferenceBuilder(com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt.newBuilder());
        }
      }
      return financialAccountReferenceBuilder;
    }

    /**
     * Sets the Builder instance for the 'financialAccountReference' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AppointmentSource.Builder setFinancialAccountReferenceBuilder(com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt.Builder value) {
      clearFinancialAccountReference();
      financialAccountReferenceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'financialAccountReference' field has an active Builder instance
     * @return True if the 'financialAccountReference' field has an active Builder instance
     */
    public boolean hasFinancialAccountReferenceBuilder() {
      return financialAccountReferenceBuilder != null;
    }

    /**
      * Clears the value of the 'financialAccountReference' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearFinancialAccountReference() {
      financialAccountReference = null;
      financialAccountReferenceBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionIds' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTransactionIds() {
      return transactionIds;
    }


    /**
      * Sets the value of the 'transactionIds' field.
      * @param value The value of 'transactionIds'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder setTransactionIds(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[8], value);
      this.transactionIds = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionIds' field has been set.
      * @return True if the 'transactionIds' field has been set, false otherwise.
      */
    public boolean hasTransactionIds() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'transactionIds' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentSource.Builder clearTransactionIds() {
      transactionIds = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AppointmentSource build() {
      try {
        AppointmentSource record = new AppointmentSource();
        record.appointmentId = fieldSetFlags()[0] ? this.appointmentId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.leftyUserProviderId = fieldSetFlags()[1] ? this.leftyUserProviderId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.clientAddressId = fieldSetFlags()[2] ? this.clientAddressId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.appointmentDateTime = fieldSetFlags()[3] ? this.appointmentDateTime : (java.lang.Long) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (com.leftybeauty.schema.avro.AppointmentStatusEnum) defaultValue(fields()[4]);
        record.leftyProviderServiceReferences = fieldSetFlags()[5] ? this.leftyProviderServiceReferences : (java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt>) defaultValue(fields()[5]);
        record.actor = fieldSetFlags()[6] ? this.actor : (com.leftybeauty.schema.avro.LeftyUserTypeEnum) defaultValue(fields()[6]);
        if (financialAccountReferenceBuilder != null) {
          try {
            record.financialAccountReference = this.financialAccountReferenceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("financialAccountReference"));
            throw e;
          }
        } else {
          record.financialAccountReference = fieldSetFlags()[7] ? this.financialAccountReference : (com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt) defaultValue(fields()[7]);
        }
        record.transactionIds = fieldSetFlags()[8] ? this.transactionIds : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AppointmentSource>
    WRITER$ = (org.apache.avro.io.DatumWriter<AppointmentSource>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AppointmentSource>
    READER$ = (org.apache.avro.io.DatumReader<AppointmentSource>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.appointmentId);

    out.writeString(this.leftyUserProviderId);

    out.writeString(this.clientAddressId);

    out.writeLong(this.appointmentDateTime);

    out.writeEnum(this.status.ordinal());

    long size0 = this.leftyProviderServiceReferences.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt e0: this.leftyProviderServiceReferences) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeEnum(this.actor.ordinal());

    this.financialAccountReference.customEncode(out);

    if (this.transactionIds == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.transactionIds.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (java.lang.CharSequence e1: this.transactionIds) {
        actualSize1++;
        out.startItem();
        out.writeString(e1);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);

      this.leftyUserProviderId = in.readString(this.leftyUserProviderId instanceof Utf8 ? (Utf8)this.leftyUserProviderId : null);

      this.clientAddressId = in.readString(this.clientAddressId instanceof Utf8 ? (Utf8)this.clientAddressId : null);

      this.appointmentDateTime = in.readLong();

      this.status = com.leftybeauty.schema.avro.AppointmentStatusEnum.values()[in.readEnum()];

      long size0 = in.readArrayStart();
      java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> a0 = this.leftyProviderServiceReferences;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt>((int)size0, SCHEMA$.getField("leftyProviderServiceReferences").schema());
        this.leftyProviderServiceReferences = a0;
      } else a0.clear();
      SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      this.actor = com.leftybeauty.schema.avro.LeftyUserTypeEnum.values()[in.readEnum()];

      if (this.financialAccountReference == null) {
        this.financialAccountReference = new com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt();
      }
      this.financialAccountReference.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.transactionIds = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a1 = this.transactionIds;
        if (a1 == null) {
          a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("transactionIds").schema().getTypes().get(1));
          this.transactionIds = a1;
        } else a1.clear();
        SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
            e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
            a1.add(e1);
          }
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);
          break;

        case 1:
          this.leftyUserProviderId = in.readString(this.leftyUserProviderId instanceof Utf8 ? (Utf8)this.leftyUserProviderId : null);
          break;

        case 2:
          this.clientAddressId = in.readString(this.clientAddressId instanceof Utf8 ? (Utf8)this.clientAddressId : null);
          break;

        case 3:
          this.appointmentDateTime = in.readLong();
          break;

        case 4:
          this.status = com.leftybeauty.schema.avro.AppointmentStatusEnum.values()[in.readEnum()];
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> a0 = this.leftyProviderServiceReferences;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt>((int)size0, SCHEMA$.getField("leftyProviderServiceReferences").schema());
            this.leftyProviderServiceReferences = a0;
          } else a0.clear();
          SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.leftybeauty.schema.avro.LeftyProviderServiceSourceReferenceAt();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 6:
          this.actor = com.leftybeauty.schema.avro.LeftyUserTypeEnum.values()[in.readEnum()];
          break;

        case 7:
          if (this.financialAccountReference == null) {
            this.financialAccountReference = new com.leftybeauty.schema.avro.FinancialAccountSourceReferenceAt();
          }
          this.financialAccountReference.customDecode(in);
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.transactionIds = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a1 = this.transactionIds;
            if (a1 == null) {
              a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("transactionIds").schema().getTypes().get(1));
              this.transactionIds = a1;
            } else a1.clear();
            SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
                e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
                a1.add(e1);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










