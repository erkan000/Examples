/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LeftyUserSource extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2530188891685975534L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LeftyUserSource\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"leftyUserId\",\"type\":\"string\"},{\"name\":\"newUser\",\"type\":\"boolean\"},{\"name\":\"userTypes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"enum\",\"name\":\"LeftyUserTypeEnum\",\"symbols\":[\"Client\",\"Provider\"]}}},{\"name\":\"paymentProviderCustomerIdentifier\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LeftyUserSource> ENCODER =
      new BinaryMessageEncoder<LeftyUserSource>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LeftyUserSource> DECODER =
      new BinaryMessageDecoder<LeftyUserSource>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LeftyUserSource> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LeftyUserSource> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LeftyUserSource> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LeftyUserSource>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LeftyUserSource to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LeftyUserSource from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LeftyUserSource instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LeftyUserSource fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence leftyUserId;
   private boolean newUser;
   private java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> userTypes;
   private java.lang.CharSequence paymentProviderCustomerIdentifier;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LeftyUserSource() {}

  /**
   * All-args constructor.
   * @param leftyUserId The new value for leftyUserId
   * @param newUser The new value for newUser
   * @param userTypes The new value for userTypes
   * @param paymentProviderCustomerIdentifier The new value for paymentProviderCustomerIdentifier
   */
  public LeftyUserSource(java.lang.CharSequence leftyUserId, java.lang.Boolean newUser, java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> userTypes, java.lang.CharSequence paymentProviderCustomerIdentifier) {
    this.leftyUserId = leftyUserId;
    this.newUser = newUser;
    this.userTypes = userTypes;
    this.paymentProviderCustomerIdentifier = paymentProviderCustomerIdentifier;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return leftyUserId;
    case 1: return newUser;
    case 2: return userTypes;
    case 3: return paymentProviderCustomerIdentifier;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: leftyUserId = (java.lang.CharSequence)value$; break;
    case 1: newUser = (java.lang.Boolean)value$; break;
    case 2: userTypes = (java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum>)value$; break;
    case 3: paymentProviderCustomerIdentifier = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'leftyUserId' field.
   * @return The value of the 'leftyUserId' field.
   */
  public java.lang.CharSequence getLeftyUserId() {
    return leftyUserId;
  }


  /**
   * Sets the value of the 'leftyUserId' field.
   * @param value the value to set.
   */
  public void setLeftyUserId(java.lang.CharSequence value) {
    this.leftyUserId = value;
  }

  /**
   * Gets the value of the 'newUser' field.
   * @return The value of the 'newUser' field.
   */
  public boolean getNewUser() {
    return newUser;
  }


  /**
   * Sets the value of the 'newUser' field.
   * @param value the value to set.
   */
  public void setNewUser(boolean value) {
    this.newUser = value;
  }

  /**
   * Gets the value of the 'userTypes' field.
   * @return The value of the 'userTypes' field.
   */
  public java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> getUserTypes() {
    return userTypes;
  }


  /**
   * Sets the value of the 'userTypes' field.
   * @param value the value to set.
   */
  public void setUserTypes(java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> value) {
    this.userTypes = value;
  }

  /**
   * Gets the value of the 'paymentProviderCustomerIdentifier' field.
   * @return The value of the 'paymentProviderCustomerIdentifier' field.
   */
  public java.lang.CharSequence getPaymentProviderCustomerIdentifier() {
    return paymentProviderCustomerIdentifier;
  }


  /**
   * Sets the value of the 'paymentProviderCustomerIdentifier' field.
   * @param value the value to set.
   */
  public void setPaymentProviderCustomerIdentifier(java.lang.CharSequence value) {
    this.paymentProviderCustomerIdentifier = value;
  }

  /**
   * Creates a new LeftyUserSource RecordBuilder.
   * @return A new LeftyUserSource RecordBuilder
   */
  public static com.leftybeauty.schema.avro.LeftyUserSource.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.LeftyUserSource.Builder();
  }

  /**
   * Creates a new LeftyUserSource RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LeftyUserSource RecordBuilder
   */
  public static com.leftybeauty.schema.avro.LeftyUserSource.Builder newBuilder(com.leftybeauty.schema.avro.LeftyUserSource.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.LeftyUserSource.Builder();
    } else {
      return new com.leftybeauty.schema.avro.LeftyUserSource.Builder(other);
    }
  }

  /**
   * Creates a new LeftyUserSource RecordBuilder by copying an existing LeftyUserSource instance.
   * @param other The existing instance to copy.
   * @return A new LeftyUserSource RecordBuilder
   */
  public static com.leftybeauty.schema.avro.LeftyUserSource.Builder newBuilder(com.leftybeauty.schema.avro.LeftyUserSource other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.LeftyUserSource.Builder();
    } else {
      return new com.leftybeauty.schema.avro.LeftyUserSource.Builder(other);
    }
  }

  /**
   * RecordBuilder for LeftyUserSource instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LeftyUserSource>
    implements org.apache.avro.data.RecordBuilder<LeftyUserSource> {

    private java.lang.CharSequence leftyUserId;
    private boolean newUser;
    private java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> userTypes;
    private java.lang.CharSequence paymentProviderCustomerIdentifier;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.LeftyUserSource.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.leftyUserId)) {
        this.leftyUserId = data().deepCopy(fields()[0].schema(), other.leftyUserId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.newUser)) {
        this.newUser = data().deepCopy(fields()[1].schema(), other.newUser);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.userTypes)) {
        this.userTypes = data().deepCopy(fields()[2].schema(), other.userTypes);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.paymentProviderCustomerIdentifier)) {
        this.paymentProviderCustomerIdentifier = data().deepCopy(fields()[3].schema(), other.paymentProviderCustomerIdentifier);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing LeftyUserSource instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.LeftyUserSource other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.leftyUserId)) {
        this.leftyUserId = data().deepCopy(fields()[0].schema(), other.leftyUserId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.newUser)) {
        this.newUser = data().deepCopy(fields()[1].schema(), other.newUser);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userTypes)) {
        this.userTypes = data().deepCopy(fields()[2].schema(), other.userTypes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.paymentProviderCustomerIdentifier)) {
        this.paymentProviderCustomerIdentifier = data().deepCopy(fields()[3].schema(), other.paymentProviderCustomerIdentifier);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'leftyUserId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeftyUserId() {
      return leftyUserId;
    }


    /**
      * Sets the value of the 'leftyUserId' field.
      * @param value The value of 'leftyUserId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder setLeftyUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.leftyUserId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyUserId' field has been set.
      * @return True if the 'leftyUserId' field has been set, false otherwise.
      */
    public boolean hasLeftyUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'leftyUserId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder clearLeftyUserId() {
      leftyUserId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'newUser' field.
      * @return The value.
      */
    public boolean getNewUser() {
      return newUser;
    }


    /**
      * Sets the value of the 'newUser' field.
      * @param value The value of 'newUser'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder setNewUser(boolean value) {
      validate(fields()[1], value);
      this.newUser = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'newUser' field has been set.
      * @return True if the 'newUser' field has been set, false otherwise.
      */
    public boolean hasNewUser() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'newUser' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder clearNewUser() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userTypes' field.
      * @return The value.
      */
    public java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> getUserTypes() {
      return userTypes;
    }


    /**
      * Sets the value of the 'userTypes' field.
      * @param value The value of 'userTypes'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder setUserTypes(java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> value) {
      validate(fields()[2], value);
      this.userTypes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userTypes' field has been set.
      * @return True if the 'userTypes' field has been set, false otherwise.
      */
    public boolean hasUserTypes() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userTypes' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder clearUserTypes() {
      userTypes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentProviderCustomerIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getPaymentProviderCustomerIdentifier() {
      return paymentProviderCustomerIdentifier;
    }


    /**
      * Sets the value of the 'paymentProviderCustomerIdentifier' field.
      * @param value The value of 'paymentProviderCustomerIdentifier'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder setPaymentProviderCustomerIdentifier(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.paymentProviderCustomerIdentifier = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentProviderCustomerIdentifier' field has been set.
      * @return True if the 'paymentProviderCustomerIdentifier' field has been set, false otherwise.
      */
    public boolean hasPaymentProviderCustomerIdentifier() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'paymentProviderCustomerIdentifier' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyUserSource.Builder clearPaymentProviderCustomerIdentifier() {
      paymentProviderCustomerIdentifier = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LeftyUserSource build() {
      try {
        LeftyUserSource record = new LeftyUserSource();
        record.leftyUserId = fieldSetFlags()[0] ? this.leftyUserId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.newUser = fieldSetFlags()[1] ? this.newUser : (java.lang.Boolean) defaultValue(fields()[1]);
        record.userTypes = fieldSetFlags()[2] ? this.userTypes : (java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum>) defaultValue(fields()[2]);
        record.paymentProviderCustomerIdentifier = fieldSetFlags()[3] ? this.paymentProviderCustomerIdentifier : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LeftyUserSource>
    WRITER$ = (org.apache.avro.io.DatumWriter<LeftyUserSource>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LeftyUserSource>
    READER$ = (org.apache.avro.io.DatumReader<LeftyUserSource>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.leftyUserId);

    out.writeBoolean(this.newUser);

    long size0 = this.userTypes.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.leftybeauty.schema.avro.LeftyUserTypeEnum e0: this.userTypes) {
      actualSize0++;
      out.startItem();
      out.writeEnum(e0.ordinal());
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeString(this.paymentProviderCustomerIdentifier);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.leftyUserId = in.readString(this.leftyUserId instanceof Utf8 ? (Utf8)this.leftyUserId : null);

      this.newUser = in.readBoolean();

      long size0 = in.readArrayStart();
      java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> a0 = this.userTypes;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.leftybeauty.schema.avro.LeftyUserTypeEnum>((int)size0, SCHEMA$.getField("userTypes").schema());
        this.userTypes = a0;
      } else a0.clear();
      SpecificData.Array<com.leftybeauty.schema.avro.LeftyUserTypeEnum> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.LeftyUserTypeEnum>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.leftybeauty.schema.avro.LeftyUserTypeEnum e0 = (ga0 != null ? ga0.peek() : null);
          e0 = com.leftybeauty.schema.avro.LeftyUserTypeEnum.values()[in.readEnum()];
          a0.add(e0);
        }
      }

      this.paymentProviderCustomerIdentifier = in.readString(this.paymentProviderCustomerIdentifier instanceof Utf8 ? (Utf8)this.paymentProviderCustomerIdentifier : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.leftyUserId = in.readString(this.leftyUserId instanceof Utf8 ? (Utf8)this.leftyUserId : null);
          break;

        case 1:
          this.newUser = in.readBoolean();
          break;

        case 2:
          long size0 = in.readArrayStart();
          java.util.List<com.leftybeauty.schema.avro.LeftyUserTypeEnum> a0 = this.userTypes;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.leftybeauty.schema.avro.LeftyUserTypeEnum>((int)size0, SCHEMA$.getField("userTypes").schema());
            this.userTypes = a0;
          } else a0.clear();
          SpecificData.Array<com.leftybeauty.schema.avro.LeftyUserTypeEnum> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.leftybeauty.schema.avro.LeftyUserTypeEnum>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.leftybeauty.schema.avro.LeftyUserTypeEnum e0 = (ga0 != null ? ga0.peek() : null);
              e0 = com.leftybeauty.schema.avro.LeftyUserTypeEnum.values()[in.readEnum()];
              a0.add(e0);
            }
          }
          break;

        case 3:
          this.paymentProviderCustomerIdentifier = in.readString(this.paymentProviderCustomerIdentifier instanceof Utf8 ? (Utf8)this.paymentProviderCustomerIdentifier : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










