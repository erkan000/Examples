/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LeftyProviderServiceValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7633268588158137828L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LeftyProviderServiceValue\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"leftyProviderServiceId\",\"type\":\"string\"},{\"name\":\"serviceCategoryName\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"duration\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LeftyProviderServiceValue> ENCODER =
      new BinaryMessageEncoder<LeftyProviderServiceValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LeftyProviderServiceValue> DECODER =
      new BinaryMessageDecoder<LeftyProviderServiceValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LeftyProviderServiceValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LeftyProviderServiceValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LeftyProviderServiceValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LeftyProviderServiceValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LeftyProviderServiceValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LeftyProviderServiceValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LeftyProviderServiceValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LeftyProviderServiceValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence leftyProviderServiceId;
  private java.lang.CharSequence serviceCategoryName;
  private double price;
  private int duration;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LeftyProviderServiceValue() {}

  /**
   * All-args constructor.
   * @param leftyProviderServiceId The new value for leftyProviderServiceId
   * @param serviceCategoryName The new value for serviceCategoryName
   * @param price The new value for price
   * @param duration The new value for duration
   */
  public LeftyProviderServiceValue(java.lang.CharSequence leftyProviderServiceId, java.lang.CharSequence serviceCategoryName, java.lang.Double price, java.lang.Integer duration) {
    this.leftyProviderServiceId = leftyProviderServiceId;
    this.serviceCategoryName = serviceCategoryName;
    this.price = price;
    this.duration = duration;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return leftyProviderServiceId;
    case 1: return serviceCategoryName;
    case 2: return price;
    case 3: return duration;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: leftyProviderServiceId = (java.lang.CharSequence)value$; break;
    case 1: serviceCategoryName = (java.lang.CharSequence)value$; break;
    case 2: price = (java.lang.Double)value$; break;
    case 3: duration = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'leftyProviderServiceId' field.
   * @return The value of the 'leftyProviderServiceId' field.
   */
  public java.lang.CharSequence getLeftyProviderServiceId() {
    return leftyProviderServiceId;
  }


  /**
   * Sets the value of the 'leftyProviderServiceId' field.
   * @param value the value to set.
   */
  public void setLeftyProviderServiceId(java.lang.CharSequence value) {
    this.leftyProviderServiceId = value;
  }

  /**
   * Gets the value of the 'serviceCategoryName' field.
   * @return The value of the 'serviceCategoryName' field.
   */
  public java.lang.CharSequence getServiceCategoryName() {
    return serviceCategoryName;
  }


  /**
   * Sets the value of the 'serviceCategoryName' field.
   * @param value the value to set.
   */
  public void setServiceCategoryName(java.lang.CharSequence value) {
    this.serviceCategoryName = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public double getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'duration' field.
   * @return The value of the 'duration' field.
   */
  public int getDuration() {
    return duration;
  }


  /**
   * Sets the value of the 'duration' field.
   * @param value the value to set.
   */
  public void setDuration(int value) {
    this.duration = value;
  }

  /**
   * Creates a new LeftyProviderServiceValue RecordBuilder.
   * @return A new LeftyProviderServiceValue RecordBuilder
   */
  public static com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder();
  }

  /**
   * Creates a new LeftyProviderServiceValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LeftyProviderServiceValue RecordBuilder
   */
  public static com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder newBuilder(com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder();
    } else {
      return new com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder(other);
    }
  }

  /**
   * Creates a new LeftyProviderServiceValue RecordBuilder by copying an existing LeftyProviderServiceValue instance.
   * @param other The existing instance to copy.
   * @return A new LeftyProviderServiceValue RecordBuilder
   */
  public static com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder newBuilder(com.leftybeauty.schema.avro.LeftyProviderServiceValue other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder();
    } else {
      return new com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for LeftyProviderServiceValue instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LeftyProviderServiceValue>
    implements org.apache.avro.data.RecordBuilder<LeftyProviderServiceValue> {

    private java.lang.CharSequence leftyProviderServiceId;
    private java.lang.CharSequence serviceCategoryName;
    private double price;
    private int duration;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.leftyProviderServiceId)) {
        this.leftyProviderServiceId = data().deepCopy(fields()[0].schema(), other.leftyProviderServiceId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.serviceCategoryName)) {
        this.serviceCategoryName = data().deepCopy(fields()[1].schema(), other.serviceCategoryName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.price)) {
        this.price = data().deepCopy(fields()[2].schema(), other.price);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.duration)) {
        this.duration = data().deepCopy(fields()[3].schema(), other.duration);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing LeftyProviderServiceValue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.LeftyProviderServiceValue other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.leftyProviderServiceId)) {
        this.leftyProviderServiceId = data().deepCopy(fields()[0].schema(), other.leftyProviderServiceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.serviceCategoryName)) {
        this.serviceCategoryName = data().deepCopy(fields()[1].schema(), other.serviceCategoryName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.price)) {
        this.price = data().deepCopy(fields()[2].schema(), other.price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.duration)) {
        this.duration = data().deepCopy(fields()[3].schema(), other.duration);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'leftyProviderServiceId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeftyProviderServiceId() {
      return leftyProviderServiceId;
    }


    /**
      * Sets the value of the 'leftyProviderServiceId' field.
      * @param value The value of 'leftyProviderServiceId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder setLeftyProviderServiceId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.leftyProviderServiceId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyProviderServiceId' field has been set.
      * @return True if the 'leftyProviderServiceId' field has been set, false otherwise.
      */
    public boolean hasLeftyProviderServiceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'leftyProviderServiceId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder clearLeftyProviderServiceId() {
      leftyProviderServiceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceCategoryName' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceCategoryName() {
      return serviceCategoryName;
    }


    /**
      * Sets the value of the 'serviceCategoryName' field.
      * @param value The value of 'serviceCategoryName'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder setServiceCategoryName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.serviceCategoryName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceCategoryName' field has been set.
      * @return True if the 'serviceCategoryName' field has been set, false otherwise.
      */
    public boolean hasServiceCategoryName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'serviceCategoryName' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder clearServiceCategoryName() {
      serviceCategoryName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public double getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder setPrice(double value) {
      validate(fields()[2], value);
      this.price = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder clearPrice() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'duration' field.
      * @return The value.
      */
    public int getDuration() {
      return duration;
    }


    /**
      * Sets the value of the 'duration' field.
      * @param value The value of 'duration'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder setDuration(int value) {
      validate(fields()[3], value);
      this.duration = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'duration' field has been set.
      * @return True if the 'duration' field has been set, false otherwise.
      */
    public boolean hasDuration() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'duration' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.LeftyProviderServiceValue.Builder clearDuration() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LeftyProviderServiceValue build() {
      try {
        LeftyProviderServiceValue record = new LeftyProviderServiceValue();
        record.leftyProviderServiceId = fieldSetFlags()[0] ? this.leftyProviderServiceId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.serviceCategoryName = fieldSetFlags()[1] ? this.serviceCategoryName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.price = fieldSetFlags()[2] ? this.price : (java.lang.Double) defaultValue(fields()[2]);
        record.duration = fieldSetFlags()[3] ? this.duration : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LeftyProviderServiceValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<LeftyProviderServiceValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LeftyProviderServiceValue>
    READER$ = (org.apache.avro.io.DatumReader<LeftyProviderServiceValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.leftyProviderServiceId);

    out.writeString(this.serviceCategoryName);

    out.writeDouble(this.price);

    out.writeInt(this.duration);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.leftyProviderServiceId = in.readString(this.leftyProviderServiceId instanceof Utf8 ? (Utf8)this.leftyProviderServiceId : null);

      this.serviceCategoryName = in.readString(this.serviceCategoryName instanceof Utf8 ? (Utf8)this.serviceCategoryName : null);

      this.price = in.readDouble();

      this.duration = in.readInt();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.leftyProviderServiceId = in.readString(this.leftyProviderServiceId instanceof Utf8 ? (Utf8)this.leftyProviderServiceId : null);
          break;

        case 1:
          this.serviceCategoryName = in.readString(this.serviceCategoryName instanceof Utf8 ? (Utf8)this.serviceCategoryName : null);
          break;

        case 2:
          this.price = in.readDouble();
          break;

        case 3:
          this.duration = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










