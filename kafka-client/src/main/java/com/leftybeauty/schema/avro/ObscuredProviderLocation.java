/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ObscuredProviderLocation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -882566221941644465L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ObscuredProviderLocation\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"leftyUserId\",\"type\":\"string\"},{\"name\":\"longitude\",\"type\":\"double\"},{\"name\":\"latitude\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ObscuredProviderLocation> ENCODER =
      new BinaryMessageEncoder<ObscuredProviderLocation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ObscuredProviderLocation> DECODER =
      new BinaryMessageDecoder<ObscuredProviderLocation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ObscuredProviderLocation> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ObscuredProviderLocation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ObscuredProviderLocation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ObscuredProviderLocation>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ObscuredProviderLocation to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ObscuredProviderLocation from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ObscuredProviderLocation instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ObscuredProviderLocation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence leftyUserId;
   private double longitude;
   private double latitude;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ObscuredProviderLocation() {}

  /**
   * All-args constructor.
   * @param leftyUserId The new value for leftyUserId
   * @param longitude The new value for longitude
   * @param latitude The new value for latitude
   */
  public ObscuredProviderLocation(java.lang.CharSequence leftyUserId, java.lang.Double longitude, java.lang.Double latitude) {
    this.leftyUserId = leftyUserId;
    this.longitude = longitude;
    this.latitude = latitude;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return leftyUserId;
    case 1: return longitude;
    case 2: return latitude;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: leftyUserId = (java.lang.CharSequence)value$; break;
    case 1: longitude = (java.lang.Double)value$; break;
    case 2: latitude = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'leftyUserId' field.
   * @return The value of the 'leftyUserId' field.
   */
  public java.lang.CharSequence getLeftyUserId() {
    return leftyUserId;
  }


  /**
   * Sets the value of the 'leftyUserId' field.
   * @param value the value to set.
   */
  public void setLeftyUserId(java.lang.CharSequence value) {
    this.leftyUserId = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public double getLongitude() {
    return longitude;
  }


  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(double value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public double getLatitude() {
    return latitude;
  }


  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(double value) {
    this.latitude = value;
  }

  /**
   * Creates a new ObscuredProviderLocation RecordBuilder.
   * @return A new ObscuredProviderLocation RecordBuilder
   */
  public static com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder();
  }

  /**
   * Creates a new ObscuredProviderLocation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ObscuredProviderLocation RecordBuilder
   */
  public static com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder newBuilder(com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder();
    } else {
      return new com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder(other);
    }
  }

  /**
   * Creates a new ObscuredProviderLocation RecordBuilder by copying an existing ObscuredProviderLocation instance.
   * @param other The existing instance to copy.
   * @return A new ObscuredProviderLocation RecordBuilder
   */
  public static com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder newBuilder(com.leftybeauty.schema.avro.ObscuredProviderLocation other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder();
    } else {
      return new com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder(other);
    }
  }

  /**
   * RecordBuilder for ObscuredProviderLocation instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ObscuredProviderLocation>
    implements org.apache.avro.data.RecordBuilder<ObscuredProviderLocation> {

    private java.lang.CharSequence leftyUserId;
    private double longitude;
    private double latitude;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.leftyUserId)) {
        this.leftyUserId = data().deepCopy(fields()[0].schema(), other.leftyUserId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.longitude)) {
        this.longitude = data().deepCopy(fields()[1].schema(), other.longitude);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.latitude)) {
        this.latitude = data().deepCopy(fields()[2].schema(), other.latitude);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ObscuredProviderLocation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.ObscuredProviderLocation other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.leftyUserId)) {
        this.leftyUserId = data().deepCopy(fields()[0].schema(), other.leftyUserId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longitude)) {
        this.longitude = data().deepCopy(fields()[1].schema(), other.longitude);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.latitude)) {
        this.latitude = data().deepCopy(fields()[2].schema(), other.latitude);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'leftyUserId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeftyUserId() {
      return leftyUserId;
    }


    /**
      * Sets the value of the 'leftyUserId' field.
      * @param value The value of 'leftyUserId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder setLeftyUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.leftyUserId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyUserId' field has been set.
      * @return True if the 'leftyUserId' field has been set, false otherwise.
      */
    public boolean hasLeftyUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'leftyUserId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder clearLeftyUserId() {
      leftyUserId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public double getLongitude() {
      return longitude;
    }


    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder setLongitude(double value) {
      validate(fields()[1], value);
      this.longitude = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder clearLongitude() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public double getLatitude() {
      return latitude;
    }


    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder setLatitude(double value) {
      validate(fields()[2], value);
      this.latitude = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.ObscuredProviderLocation.Builder clearLatitude() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ObscuredProviderLocation build() {
      try {
        ObscuredProviderLocation record = new ObscuredProviderLocation();
        record.leftyUserId = fieldSetFlags()[0] ? this.leftyUserId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.longitude = fieldSetFlags()[1] ? this.longitude : (java.lang.Double) defaultValue(fields()[1]);
        record.latitude = fieldSetFlags()[2] ? this.latitude : (java.lang.Double) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ObscuredProviderLocation>
    WRITER$ = (org.apache.avro.io.DatumWriter<ObscuredProviderLocation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ObscuredProviderLocation>
    READER$ = (org.apache.avro.io.DatumReader<ObscuredProviderLocation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.leftyUserId);

    out.writeDouble(this.longitude);

    out.writeDouble(this.latitude);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.leftyUserId = in.readString(this.leftyUserId instanceof Utf8 ? (Utf8)this.leftyUserId : null);

      this.longitude = in.readDouble();

      this.latitude = in.readDouble();

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.leftyUserId = in.readString(this.leftyUserId instanceof Utf8 ? (Utf8)this.leftyUserId : null);
          break;

        case 1:
          this.longitude = in.readDouble();
          break;

        case 2:
          this.latitude = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










