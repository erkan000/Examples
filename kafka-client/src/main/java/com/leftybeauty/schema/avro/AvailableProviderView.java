/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvailableProviderView extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7984947070027558677L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvailableProviderView\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"leftyUserId\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"avatarStorageProviderLocation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ratingAverage\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"obscuredLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LocationValue\",\"fields\":[{\"name\":\"longitude\",\"type\":\"double\"},{\"name\":\"latitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"available\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvailableProviderView> ENCODER =
      new BinaryMessageEncoder<AvailableProviderView>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvailableProviderView> DECODER =
      new BinaryMessageDecoder<AvailableProviderView>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvailableProviderView> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvailableProviderView> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvailableProviderView> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvailableProviderView>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvailableProviderView to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvailableProviderView from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvailableProviderView instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvailableProviderView fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence leftyUserId;
  private java.lang.CharSequence firstName;
  private java.lang.CharSequence lastName;
  private java.lang.CharSequence avatarStorageProviderLocation;
  private java.lang.Double ratingAverage;
  private com.leftybeauty.schema.avro.LocationValue obscuredLocation;
  private java.lang.Boolean available;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvailableProviderView() {}

  /**
   * All-args constructor.
   * @param leftyUserId The new value for leftyUserId
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param avatarStorageProviderLocation The new value for avatarStorageProviderLocation
   * @param ratingAverage The new value for ratingAverage
   * @param obscuredLocation The new value for obscuredLocation
   * @param available The new value for available
   */
  public AvailableProviderView(java.lang.CharSequence leftyUserId, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence avatarStorageProviderLocation, java.lang.Double ratingAverage, com.leftybeauty.schema.avro.LocationValue obscuredLocation, java.lang.Boolean available) {
    this.leftyUserId = leftyUserId;
    this.firstName = firstName;
    this.lastName = lastName;
    this.avatarStorageProviderLocation = avatarStorageProviderLocation;
    this.ratingAverage = ratingAverage;
    this.obscuredLocation = obscuredLocation;
    this.available = available;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return leftyUserId;
    case 1: return firstName;
    case 2: return lastName;
    case 3: return avatarStorageProviderLocation;
    case 4: return ratingAverage;
    case 5: return obscuredLocation;
    case 6: return available;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: leftyUserId = (java.lang.CharSequence)value$; break;
    case 1: firstName = (java.lang.CharSequence)value$; break;
    case 2: lastName = (java.lang.CharSequence)value$; break;
    case 3: avatarStorageProviderLocation = (java.lang.CharSequence)value$; break;
    case 4: ratingAverage = (java.lang.Double)value$; break;
    case 5: obscuredLocation = (com.leftybeauty.schema.avro.LocationValue)value$; break;
    case 6: available = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'leftyUserId' field.
   * @return The value of the 'leftyUserId' field.
   */
  public java.lang.CharSequence getLeftyUserId() {
    return leftyUserId;
  }


  /**
   * Sets the value of the 'leftyUserId' field.
   * @param value the value to set.
   */
  public void setLeftyUserId(java.lang.CharSequence value) {
    this.leftyUserId = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'avatarStorageProviderLocation' field.
   * @return The value of the 'avatarStorageProviderLocation' field.
   */
  public java.lang.CharSequence getAvatarStorageProviderLocation() {
    return avatarStorageProviderLocation;
  }


  /**
   * Sets the value of the 'avatarStorageProviderLocation' field.
   * @param value the value to set.
   */
  public void setAvatarStorageProviderLocation(java.lang.CharSequence value) {
    this.avatarStorageProviderLocation = value;
  }

  /**
   * Gets the value of the 'ratingAverage' field.
   * @return The value of the 'ratingAverage' field.
   */
  public java.lang.Double getRatingAverage() {
    return ratingAverage;
  }


  /**
   * Sets the value of the 'ratingAverage' field.
   * @param value the value to set.
   */
  public void setRatingAverage(java.lang.Double value) {
    this.ratingAverage = value;
  }

  /**
   * Gets the value of the 'obscuredLocation' field.
   * @return The value of the 'obscuredLocation' field.
   */
  public com.leftybeauty.schema.avro.LocationValue getObscuredLocation() {
    return obscuredLocation;
  }


  /**
   * Sets the value of the 'obscuredLocation' field.
   * @param value the value to set.
   */
  public void setObscuredLocation(com.leftybeauty.schema.avro.LocationValue value) {
    this.obscuredLocation = value;
  }

  /**
   * Gets the value of the 'available' field.
   * @return The value of the 'available' field.
   */
  public java.lang.Boolean getAvailable() {
    return available;
  }


  /**
   * Sets the value of the 'available' field.
   * @param value the value to set.
   */
  public void setAvailable(java.lang.Boolean value) {
    this.available = value;
  }

  /**
   * Creates a new AvailableProviderView RecordBuilder.
   * @return A new AvailableProviderView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AvailableProviderView.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.AvailableProviderView.Builder();
  }

  /**
   * Creates a new AvailableProviderView RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvailableProviderView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AvailableProviderView.Builder newBuilder(com.leftybeauty.schema.avro.AvailableProviderView.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AvailableProviderView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AvailableProviderView.Builder(other);
    }
  }

  /**
   * Creates a new AvailableProviderView RecordBuilder by copying an existing AvailableProviderView instance.
   * @param other The existing instance to copy.
   * @return A new AvailableProviderView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AvailableProviderView.Builder newBuilder(com.leftybeauty.schema.avro.AvailableProviderView other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AvailableProviderView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AvailableProviderView.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvailableProviderView instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvailableProviderView>
    implements org.apache.avro.data.RecordBuilder<AvailableProviderView> {

    private java.lang.CharSequence leftyUserId;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence avatarStorageProviderLocation;
    private java.lang.Double ratingAverage;
    private com.leftybeauty.schema.avro.LocationValue obscuredLocation;
    private com.leftybeauty.schema.avro.LocationValue.Builder obscuredLocationBuilder;
    private java.lang.Boolean available;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AvailableProviderView.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.leftyUserId)) {
        this.leftyUserId = data().deepCopy(fields()[0].schema(), other.leftyUserId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.avatarStorageProviderLocation)) {
        this.avatarStorageProviderLocation = data().deepCopy(fields()[3].schema(), other.avatarStorageProviderLocation);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ratingAverage)) {
        this.ratingAverage = data().deepCopy(fields()[4].schema(), other.ratingAverage);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.obscuredLocation)) {
        this.obscuredLocation = data().deepCopy(fields()[5].schema(), other.obscuredLocation);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasObscuredLocationBuilder()) {
        this.obscuredLocationBuilder = com.leftybeauty.schema.avro.LocationValue.newBuilder(other.getObscuredLocationBuilder());
      }
      if (isValidValue(fields()[6], other.available)) {
        this.available = data().deepCopy(fields()[6].schema(), other.available);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing AvailableProviderView instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AvailableProviderView other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.leftyUserId)) {
        this.leftyUserId = data().deepCopy(fields()[0].schema(), other.leftyUserId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avatarStorageProviderLocation)) {
        this.avatarStorageProviderLocation = data().deepCopy(fields()[3].schema(), other.avatarStorageProviderLocation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ratingAverage)) {
        this.ratingAverage = data().deepCopy(fields()[4].schema(), other.ratingAverage);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.obscuredLocation)) {
        this.obscuredLocation = data().deepCopy(fields()[5].schema(), other.obscuredLocation);
        fieldSetFlags()[5] = true;
      }
      this.obscuredLocationBuilder = null;
      if (isValidValue(fields()[6], other.available)) {
        this.available = data().deepCopy(fields()[6].schema(), other.available);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'leftyUserId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeftyUserId() {
      return leftyUserId;
    }


    /**
      * Sets the value of the 'leftyUserId' field.
      * @param value The value of 'leftyUserId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setLeftyUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.leftyUserId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'leftyUserId' field has been set.
      * @return True if the 'leftyUserId' field has been set, false otherwise.
      */
    public boolean hasLeftyUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'leftyUserId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearLeftyUserId() {
      leftyUserId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'avatarStorageProviderLocation' field.
      * @return The value.
      */
    public java.lang.CharSequence getAvatarStorageProviderLocation() {
      return avatarStorageProviderLocation;
    }


    /**
      * Sets the value of the 'avatarStorageProviderLocation' field.
      * @param value The value of 'avatarStorageProviderLocation'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setAvatarStorageProviderLocation(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.avatarStorageProviderLocation = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'avatarStorageProviderLocation' field has been set.
      * @return True if the 'avatarStorageProviderLocation' field has been set, false otherwise.
      */
    public boolean hasAvatarStorageProviderLocation() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'avatarStorageProviderLocation' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearAvatarStorageProviderLocation() {
      avatarStorageProviderLocation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ratingAverage' field.
      * @return The value.
      */
    public java.lang.Double getRatingAverage() {
      return ratingAverage;
    }


    /**
      * Sets the value of the 'ratingAverage' field.
      * @param value The value of 'ratingAverage'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setRatingAverage(java.lang.Double value) {
      validate(fields()[4], value);
      this.ratingAverage = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ratingAverage' field has been set.
      * @return True if the 'ratingAverage' field has been set, false otherwise.
      */
    public boolean hasRatingAverage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ratingAverage' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearRatingAverage() {
      ratingAverage = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'obscuredLocation' field.
      * @return The value.
      */
    public com.leftybeauty.schema.avro.LocationValue getObscuredLocation() {
      return obscuredLocation;
    }


    /**
      * Sets the value of the 'obscuredLocation' field.
      * @param value The value of 'obscuredLocation'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setObscuredLocation(com.leftybeauty.schema.avro.LocationValue value) {
      validate(fields()[5], value);
      this.obscuredLocationBuilder = null;
      this.obscuredLocation = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'obscuredLocation' field has been set.
      * @return True if the 'obscuredLocation' field has been set, false otherwise.
      */
    public boolean hasObscuredLocation() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'obscuredLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.leftybeauty.schema.avro.LocationValue.Builder getObscuredLocationBuilder() {
      if (obscuredLocationBuilder == null) {
        if (hasObscuredLocation()) {
          setObscuredLocationBuilder(com.leftybeauty.schema.avro.LocationValue.newBuilder(obscuredLocation));
        } else {
          setObscuredLocationBuilder(com.leftybeauty.schema.avro.LocationValue.newBuilder());
        }
      }
      return obscuredLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'obscuredLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setObscuredLocationBuilder(com.leftybeauty.schema.avro.LocationValue.Builder value) {
      clearObscuredLocation();
      obscuredLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'obscuredLocation' field has an active Builder instance
     * @return True if the 'obscuredLocation' field has an active Builder instance
     */
    public boolean hasObscuredLocationBuilder() {
      return obscuredLocationBuilder != null;
    }

    /**
      * Clears the value of the 'obscuredLocation' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearObscuredLocation() {
      obscuredLocation = null;
      obscuredLocationBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'available' field.
      * @return The value.
      */
    public java.lang.Boolean getAvailable() {
      return available;
    }


    /**
      * Sets the value of the 'available' field.
      * @param value The value of 'available'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder setAvailable(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.available = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'available' field has been set.
      * @return True if the 'available' field has been set, false otherwise.
      */
    public boolean hasAvailable() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'available' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AvailableProviderView.Builder clearAvailable() {
      available = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvailableProviderView build() {
      try {
        AvailableProviderView record = new AvailableProviderView();
        record.leftyUserId = fieldSetFlags()[0] ? this.leftyUserId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.avatarStorageProviderLocation = fieldSetFlags()[3] ? this.avatarStorageProviderLocation : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ratingAverage = fieldSetFlags()[4] ? this.ratingAverage : (java.lang.Double) defaultValue(fields()[4]);
        if (obscuredLocationBuilder != null) {
          try {
            record.obscuredLocation = this.obscuredLocationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("obscuredLocation"));
            throw e;
          }
        } else {
          record.obscuredLocation = fieldSetFlags()[5] ? this.obscuredLocation : (com.leftybeauty.schema.avro.LocationValue) defaultValue(fields()[5]);
        }
        record.available = fieldSetFlags()[6] ? this.available : (java.lang.Boolean) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvailableProviderView>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvailableProviderView>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvailableProviderView>
    READER$ = (org.apache.avro.io.DatumReader<AvailableProviderView>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.leftyUserId);

    if (this.firstName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.firstName);
    }

    if (this.lastName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.lastName);
    }

    if (this.avatarStorageProviderLocation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.avatarStorageProviderLocation);
    }

    if (this.ratingAverage == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.ratingAverage);
    }

    if (this.obscuredLocation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.obscuredLocation.customEncode(out);
    }

    if (this.available == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.available);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.leftyUserId = in.readString(this.leftyUserId instanceof Utf8 ? (Utf8)this.leftyUserId : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.firstName = null;
      } else {
        this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastName = null;
      } else {
        this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.avatarStorageProviderLocation = null;
      } else {
        this.avatarStorageProviderLocation = in.readString(this.avatarStorageProviderLocation instanceof Utf8 ? (Utf8)this.avatarStorageProviderLocation : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ratingAverage = null;
      } else {
        this.ratingAverage = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.obscuredLocation = null;
      } else {
        if (this.obscuredLocation == null) {
          this.obscuredLocation = new com.leftybeauty.schema.avro.LocationValue();
        }
        this.obscuredLocation.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.available = null;
      } else {
        this.available = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.leftyUserId = in.readString(this.leftyUserId instanceof Utf8 ? (Utf8)this.leftyUserId : null);
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.firstName = null;
          } else {
            this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastName = null;
          } else {
            this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.avatarStorageProviderLocation = null;
          } else {
            this.avatarStorageProviderLocation = in.readString(this.avatarStorageProviderLocation instanceof Utf8 ? (Utf8)this.avatarStorageProviderLocation : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ratingAverage = null;
          } else {
            this.ratingAverage = in.readDouble();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.obscuredLocation = null;
          } else {
            if (this.obscuredLocation == null) {
              this.obscuredLocation = new com.leftybeauty.schema.avro.LocationValue();
            }
            this.obscuredLocation.customDecode(in);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.available = null;
          } else {
            this.available = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










