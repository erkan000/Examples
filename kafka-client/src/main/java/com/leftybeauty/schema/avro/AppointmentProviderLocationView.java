/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.leftybeauty.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AppointmentProviderLocationView extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7162717095627159372L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AppointmentProviderLocationView\",\"namespace\":\"com.leftybeauty.schema.avro\",\"fields\":[{\"name\":\"appointmentId\",\"type\":\"string\"},{\"name\":\"longitude\",\"type\":\"long\"},{\"name\":\"latitude\",\"type\":\"long\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AppointmentProviderLocationView> ENCODER =
      new BinaryMessageEncoder<AppointmentProviderLocationView>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AppointmentProviderLocationView> DECODER =
      new BinaryMessageDecoder<AppointmentProviderLocationView>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AppointmentProviderLocationView> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AppointmentProviderLocationView> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AppointmentProviderLocationView> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AppointmentProviderLocationView>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AppointmentProviderLocationView to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AppointmentProviderLocationView from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AppointmentProviderLocationView instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AppointmentProviderLocationView fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence appointmentId;
   private long longitude;
   private long latitude;
   private java.lang.CharSequence firstName;
   private java.lang.CharSequence lastName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AppointmentProviderLocationView() {}

  /**
   * All-args constructor.
   * @param appointmentId The new value for appointmentId
   * @param longitude The new value for longitude
   * @param latitude The new value for latitude
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   */
  public AppointmentProviderLocationView(java.lang.CharSequence appointmentId, java.lang.Long longitude, java.lang.Long latitude, java.lang.CharSequence firstName, java.lang.CharSequence lastName) {
    this.appointmentId = appointmentId;
    this.longitude = longitude;
    this.latitude = latitude;
    this.firstName = firstName;
    this.lastName = lastName;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appointmentId;
    case 1: return longitude;
    case 2: return latitude;
    case 3: return firstName;
    case 4: return lastName;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appointmentId = (java.lang.CharSequence)value$; break;
    case 1: longitude = (java.lang.Long)value$; break;
    case 2: latitude = (java.lang.Long)value$; break;
    case 3: firstName = (java.lang.CharSequence)value$; break;
    case 4: lastName = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'appointmentId' field.
   * @return The value of the 'appointmentId' field.
   */
  public java.lang.CharSequence getAppointmentId() {
    return appointmentId;
  }


  /**
   * Sets the value of the 'appointmentId' field.
   * @param value the value to set.
   */
  public void setAppointmentId(java.lang.CharSequence value) {
    this.appointmentId = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public long getLongitude() {
    return longitude;
  }


  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(long value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public long getLatitude() {
    return latitude;
  }


  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(long value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Creates a new AppointmentProviderLocationView RecordBuilder.
   * @return A new AppointmentProviderLocationView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder newBuilder() {
    return new com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder();
  }

  /**
   * Creates a new AppointmentProviderLocationView RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AppointmentProviderLocationView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder newBuilder(com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder(other);
    }
  }

  /**
   * Creates a new AppointmentProviderLocationView RecordBuilder by copying an existing AppointmentProviderLocationView instance.
   * @param other The existing instance to copy.
   * @return A new AppointmentProviderLocationView RecordBuilder
   */
  public static com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder newBuilder(com.leftybeauty.schema.avro.AppointmentProviderLocationView other) {
    if (other == null) {
      return new com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder();
    } else {
      return new com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder(other);
    }
  }

  /**
   * RecordBuilder for AppointmentProviderLocationView instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AppointmentProviderLocationView>
    implements org.apache.avro.data.RecordBuilder<AppointmentProviderLocationView> {

    private java.lang.CharSequence appointmentId;
    private long longitude;
    private long latitude;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.longitude)) {
        this.longitude = data().deepCopy(fields()[1].schema(), other.longitude);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.latitude)) {
        this.latitude = data().deepCopy(fields()[2].schema(), other.latitude);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing AppointmentProviderLocationView instance
     * @param other The existing instance to copy.
     */
    private Builder(com.leftybeauty.schema.avro.AppointmentProviderLocationView other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[0].schema(), other.appointmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longitude)) {
        this.longitude = data().deepCopy(fields()[1].schema(), other.longitude);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.latitude)) {
        this.latitude = data().deepCopy(fields()[2].schema(), other.latitude);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'appointmentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAppointmentId() {
      return appointmentId;
    }


    /**
      * Sets the value of the 'appointmentId' field.
      * @param value The value of 'appointmentId'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder setAppointmentId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.appointmentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentId' field has been set.
      * @return True if the 'appointmentId' field has been set, false otherwise.
      */
    public boolean hasAppointmentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appointmentId' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder clearAppointmentId() {
      appointmentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public long getLongitude() {
      return longitude;
    }


    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder setLongitude(long value) {
      validate(fields()[1], value);
      this.longitude = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder clearLongitude() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public long getLatitude() {
      return latitude;
    }


    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder setLatitude(long value) {
      validate(fields()[2], value);
      this.latitude = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder clearLatitude() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.firstName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.lastName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.leftybeauty.schema.avro.AppointmentProviderLocationView.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AppointmentProviderLocationView build() {
      try {
        AppointmentProviderLocationView record = new AppointmentProviderLocationView();
        record.appointmentId = fieldSetFlags()[0] ? this.appointmentId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.longitude = fieldSetFlags()[1] ? this.longitude : (java.lang.Long) defaultValue(fields()[1]);
        record.latitude = fieldSetFlags()[2] ? this.latitude : (java.lang.Long) defaultValue(fields()[2]);
        record.firstName = fieldSetFlags()[3] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.lastName = fieldSetFlags()[4] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AppointmentProviderLocationView>
    WRITER$ = (org.apache.avro.io.DatumWriter<AppointmentProviderLocationView>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AppointmentProviderLocationView>
    READER$ = (org.apache.avro.io.DatumReader<AppointmentProviderLocationView>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.appointmentId);

    out.writeLong(this.longitude);

    out.writeLong(this.latitude);

    out.writeString(this.firstName);

    out.writeString(this.lastName);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);

      this.longitude = in.readLong();

      this.latitude = in.readLong();

      this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);

      this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.appointmentId = in.readString(this.appointmentId instanceof Utf8 ? (Utf8)this.appointmentId : null);
          break;

        case 1:
          this.longitude = in.readLong();
          break;

        case 2:
          this.latitude = in.readLong();
          break;

        case 3:
          this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
          break;

        case 4:
          this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










